{"title":"OpenGL「零」：什么是OpenGL","uid":"9297302560a828b99950be98432fa02c","slug":"图形学/OpenGL/OpenGL0","date":"2021-12-05T16:00:00.000Z","updated":"2025-05-05T12:31:36.600Z","comments":true,"path":"api/articles/图形学/OpenGL/OpenGL0.json","keywords":null,"cover":"https://images.pexels.com/photos/10071756/pexels-photo-10071756.jpeg?cs=srgb&dl=pexels-natalia-kolotvina-10071756.jpg&fm=jpg","content":"<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>本系列内容全部来自Cherno的OpenGL系列视频，是对该系列内容的一个学习和总结，这个系列视频的目的是学习OpenGL的使用和思想，可能会使用非现代OpenGL的内容同时并不会实际开发一些可投入生产的库，所以代码仅供参考。</p>\n</div>\n<h1 id=\"什么是OpenGL\"><a href=\"#什么是OpenGL\" class=\"headerlink\" title=\"什么是OpenGL\"></a>什么是OpenGL</h1><p>OpenGL一般被认为是一套跨平台的图形开发API，本质上是一套标准，所以和类似编程语言的标准一样OpenGL是没有代码实现的，其具体实现由显卡厂商进行实现。</p>\n<p>OpenGL规范只是严格规定了每个函数该如何执行，以及它们的输出值。至于内部具体每个函数是如何实现的，将由OpenGL库的开发者自行决定。因为OpenGL规范并没有规定实现的细节，具体的OpenGL库允许使用不同的实现，只要其功能和结果与规范相匹配即可。</p>\n<p>正是由于具体实现由显卡厂商进行实现，所以在实际场景中各家显卡对OpenGL的支持以及实现方式都有所不同，导致同样的代码在不同显卡上会有不同表现，甚至是出现Bug。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>虽然OpenGL中带个Open字样，因为只是标准没有实现，同时具体实现都是由显卡厂商提供，而显卡厂商根本不会把自家驱动开源出来，所以其实根本没有开源一说。</p></blockquote>\n<h1 id=\"其他竞品\"><a href=\"#其他竞品\" class=\"headerlink\" title=\"其他竞品\"></a>其他竞品</h1><p>其他图形API还有诸如Direct3D、Vulkan、Metal等。</p>\n<h2 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h2><h3 id=\"Metal\"><a href=\"#Metal\" class=\"headerlink\" title=\"Metal\"></a>Metal</h3><p>苹果独占，抬走下一位。</p>\n<h3 id=\"Direct3D\"><a href=\"#Direct3D\" class=\"headerlink\" title=\"Direct3D\"></a>Direct3D</h3><p><strong>优点</strong></p>\n<p>微软开发，Win平台自带，所以对Win平台极度优化，API友好，在Win上的不二之选，同时可以使用C#开发，上手门槛也并不高。</p>\n<p><strong>缺点</strong></p>\n<p>不支持跨平台，Win独占</p>\n<h3 id=\"Vulkan\"><a href=\"#Vulkan\" class=\"headerlink\" title=\"Vulkan\"></a>Vulkan</h3><p><strong>优点</strong></p>\n<p>和OpenGL同门，是最新一代的API，同样支持跨平台</p>\n<p><strong>缺点</strong></p>\n<p>出现时间比较晚，没有OpenGL，D3D这么成熟；上手难度高，需要有一定的功底才能玩的明白(菜鸡劝退)。</p>\n<h2 id=\"为什么还是选择OpenGL\"><a href=\"#为什么还是选择OpenGL\" class=\"headerlink\" title=\"为什么还是选择OpenGL\"></a>为什么还是选择OpenGL</h2><p>对比OpenGL这些API的缺点，OpenGL上手难度适中，在可跨平台上也比较成熟，所以综合来说是成本最小的一个，所以在选择它来入门是非常合适的。</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>对于实际项目相对于直接使用OpenGL的API而言，很多人会把API封装成D3D风格，这样就能又使用OpenGL又能有一个人性化的API来使用了。</p>\n<p>ps: 如果目标平台只有Win，那么大可不必用OpenGL找罪受，直接D3D起飞更合适。</p>\n\n</div>\n","text":" 提示 本系列内容全部来自Cherno的OpenGL系列视频，是对该系列内容的一个学习和总结，这个系列视频的目的是学习OpenGL的使用和思想，可能会使用非现代...","permalink":"/post/图形学/OpenGL/OpenGL0","photos":[],"count_time":{"symbolsCount":970,"symbolsTime":"1 mins."},"categories":[{"name":"图形学","slug":"图形学","count":5,"path":"api/categories/图形学.json"},{"name":"OpenGL","slug":"图形学/OpenGL","count":5,"path":"api/categories/图形学/OpenGL.json"}],"tags":[{"name":"游戏开发","slug":"游戏开发","count":10,"path":"api/tags/游戏开发.json"},{"name":"图形开发","slug":"图形开发","count":5,"path":"api/tags/图形开发.json"},{"name":"OpenGL","slug":"OpenGL","count":5,"path":"api/tags/OpenGL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFOpenGL\"><span class=\"toc-text\">什么是OpenGL</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E7%AB%9E%E5%93%81\"><span class=\"toc-text\">其他竞品</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">优缺点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Metal\"><span class=\"toc-text\">Metal</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Direct3D\"><span class=\"toc-text\">Direct3D</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vulkan\"><span class=\"toc-text\">Vulkan</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%98%E6%98%AF%E9%80%89%E6%8B%A9OpenGL\"><span class=\"toc-text\">为什么还是选择OpenGL</span></a></li></ol></li></ol>","author":{"name":"天然卷打工战士","slug":"blog-author","avatar":"https://pic-blog-1255296193.cos.ap-beijing.myqcloud.com/touxiang.jpg","link":"/","description":"未看此花时， <br> 此花与汝同归于寂； <br> 来看此花时， <br> 此花颜色一时明白过来。","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"OpenGL「一」：使用C++编写第一个OpenGL窗口程序","uid":"8d43fa0304d1f9bd1b2ad6d1921fba3a","slug":"图形学/OpenGL/OpenGL1","date":"2021-12-06T16:00:00.000Z","updated":"2023-12-18T15:20:42.689Z","comments":true,"path":"api/articles/图形学/OpenGL/OpenGL1.json","keywords":null,"cover":"https://images.pexels.com/photos/9501403/pexels-photo-9501403.jpeg?cs=srgb&dl=pexels-alena-beliaeva-9501403.jpg&fm=jpg","text":"环境准备 VS2019 GLFW 下载GLFW一个轻量级的，开源的，跨平台的library。支持OpenGL及OpenGL ES，用来管理窗口，读取输入，处理事...","permalink":"/post/图形学/OpenGL/OpenGL1","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"图形学","slug":"图形学","count":5,"path":"api/categories/图形学.json"},{"name":"OpenGL","slug":"图形学/OpenGL","count":5,"path":"api/categories/图形学/OpenGL.json"}],"tags":[{"name":"游戏开发","slug":"游戏开发","count":10,"path":"api/tags/游戏开发.json"},{"name":"图形开发","slug":"图形开发","count":5,"path":"api/tags/图形开发.json"},{"name":"OpenGL","slug":"OpenGL","count":5,"path":"api/tags/OpenGL.json"}],"author":{"name":"天然卷打工战士","slug":"blog-author","avatar":"https://pic-blog-1255296193.cos.ap-beijing.myqcloud.com/touxiang.jpg","link":"/","description":"未看此花时， <br> 此花与汝同归于寂； <br> 来看此花时， <br> 此花颜色一时明白过来。","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"享元模式","uid":"36c783b7f07c9ef5c2531a5b03a12c76","slug":"享元模式","date":"2020-08-17T16:00:00.000Z","updated":"2023-12-18T13:29:00.876Z","comments":true,"path":"api/articles/享元模式.json","keywords":null,"cover":"https://images.pexels.com/photos/3573351/pexels-photo-3573351.png?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260","text":"描述享元模式（Flyweight Pattern）主要用于减少创建对象的数量，以减少内存占用和提高性能。这种类型的设计模式属于结构型模式，它提供了减少对象数量从...","permalink":"/post/享元模式","photos":[],"count_time":{"symbolsCount":357,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"设计模式","slug":"设计模式","count":4,"path":"api/tags/设计模式.json"},{"name":"游戏设计模式","slug":"游戏设计模式","count":3,"path":"api/tags/游戏设计模式.json"}],"author":{"name":"天然卷打工战士","slug":"blog-author","avatar":"https://pic-blog-1255296193.cos.ap-beijing.myqcloud.com/touxiang.jpg","link":"/","description":"未看此花时， <br> 此花与汝同归于寂； <br> 来看此花时， <br> 此花颜色一时明白过来。","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}