{"title":"观察者模式","uid":"cd55e9d94b94ab2ca447027ce4beeca6","slug":"观察者模式","date":"2020-08-11T16:00:00.000Z","updated":"2021-12-07T13:54:40.000Z","comments":true,"path":"api/articles/观察者模式.json","keywords":null,"cover":"https://images.pexels.com/photos/53184/peacock-bird-plumage-color-53184.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260","content":"<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>观察者模式通过“主题”与“观察者”以低耦合的方式来解决对象间存在的一对多关系，如某一对象状态发生改变时，对其他依赖组件发送通知并自动更新。</p>\n<h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><p>具有一对多关系且需要同时更新的场景</p>\n<h2 id=\"游戏中的实例\"><a href=\"#游戏中的实例\" class=\"headerlink\" title=\"游戏中的实例\"></a>游戏中的实例</h2><ul>\n<li>数据变化与ui的绑定</li>\n<li>成就系统<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思考题: 观察者模式与发布订阅的区别</p></blockquote>\n</li>\n</ul>\n<h2 id=\"模式中的角色\"><a href=\"#模式中的角色\" class=\"headerlink\" title=\"模式中的角色\"></a>模式中的角色</h2><ul>\n<li>subject(被观察者、主题)是一个基类，包含notify、addObjserver、removeObserver等接口，用来注册观察者，并在状态发生改变时通知所有观察者;</li>\n<li>observer(观察者)是一个基类，包含update接口，将自身注册到被观察者类中，并在收到通知后进行状态的更新。</li>\n</ul>\n","text":"描述观察者模式通过“主题”与“观察者”以低耦合的方式来解决对象间存在的一对多关系，如某一对象状态发生改变时，对其他依赖组件发送通知并自动更新。 应用场景具有一对多关系且需要同时更新的场景 游戏中的实例 数据变化与ui的绑定 成就系统 思考题: 观察者模式与发布订阅的区别 模式中的...","link":"","photos":[],"count_time":{"symbolsCount":301,"symbolsTime":"1 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":4,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":4,"path":"api/tags/设计模式.json"},{"name":"游戏设计模式","slug":"游戏设计模式","count":3,"path":"api/tags/游戏设计模式.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">应用场景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">游戏中的实例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%BC%8F%E4%B8%AD%E7%9A%84%E8%A7%92%E8%89%B2\"><span class=\"toc-text\">模式中的角色</span></a></li></ol>","author":{"name":"打工战士","slug":"blog-author","avatar":"https://cdn.u1.huluxia.com/g4/M03/19/CD/rBAAdmGuLfyAds0SAACW7BZxpZU096.jpg","link":"/","description":"未看此花时，此花与汝同归于寂 <br> 来看此花时，此花颜色一时明白过来","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"发布订阅模式与观察者模式的区别","uid":"51d32e32729eed215a5d3851fb64aa7c","slug":"发布订阅模式与观察者模式的区别","date":"2020-08-12T16:00:00.000Z","updated":"2021-12-07T13:54:58.000Z","comments":true,"path":"api/articles/发布订阅模式与观察者模式的区别.json","keywords":null,"cover":"https://images.pexels.com/photos/325807/pexels-photo-325807.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260","text":"角色上的区别观察者模式: subject(被观察者) observer(观察者) 发布订阅模式: Publisher(发布者) Subscriber(订阅者) Broker(中介人) 对于观察者(订阅者)的区别观察者模式: 直接存储在被观察者中，由被观察者直接的遍历通知观察者，对...","link":"","photos":[],"count_time":{"symbolsCount":760,"symbolsTime":"1 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":4,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":4,"path":"api/tags/设计模式.json"}],"author":{"name":"打工战士","slug":"blog-author","avatar":"https://cdn.u1.huluxia.com/g4/M03/19/CD/rBAAdmGuLfyAds0SAACW7BZxpZU096.jpg","link":"/","description":"未看此花时，此花与汝同归于寂 <br> 来看此花时，此花颜色一时明白过来","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"命令模式","uid":"35b7e7d45f0bf660fac88351c60754e3","slug":"命令模式","date":"2020-08-04T16:00:00.000Z","updated":"2021-12-07T13:54:50.000Z","comments":true,"path":"api/articles/命令模式.json","keywords":null,"cover":"https://images.pexels.com/photos/814499/pexels-photo-814499.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260","text":"描述命令模式（Command Pattern）是一种数据驱动的设计模式，它属于行为型模式。请求以命令的形式包裹在对象中，并传给调用对象。调用对象寻找可以处理该命令的合适的对象，并把该命令传给相应的对象，该对象执行命令。 应用场景gui 交互时可以使用。 快捷键所触发的指令 cmd...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":4,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":4,"path":"api/tags/设计模式.json"},{"name":"游戏设计模式","slug":"游戏设计模式","count":3,"path":"api/tags/游戏设计模式.json"}],"author":{"name":"打工战士","slug":"blog-author","avatar":"https://cdn.u1.huluxia.com/g4/M03/19/CD/rBAAdmGuLfyAds0SAACW7BZxpZU096.jpg","link":"/","description":"未看此花时，此花与汝同归于寂 <br> 来看此花时，此花颜色一时明白过来","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}