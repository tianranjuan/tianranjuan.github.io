{"title":"webpack4学习笔记","uid":"bf73a3194c54663868f6611faeab02f3","slug":"webpack/webpack4学习笔记","date":"2020-04-29T16:00:00.000Z","updated":"2025-09-29T14:51:46.045Z","comments":true,"path":"api/articles/webpack/webpack4学习笔记.json","keywords":null,"cover":"https://cdn.stocksnap.io/img-thumbs/280h/mill-mountain_ARAGQYVAYC.jpg","content":"<h2 id=\"配套学习demo源码\"><a href=\"#配套学习demo源码\" class=\"headerlink\" title=\"配套学习demo源码\"></a>配套学习demo源码</h2><p><a href=\"https://github.com/tianranjuan/toypack\">toypack</a></p>\n<h2 id=\"webpack-功能\"><a href=\"#webpack-功能\" class=\"headerlink\" title=\"webpack 功能\"></a>webpack 功能</h2><ul>\n<li>webpack 支持 0 配置使用，但是功能支持偏弱；</li>\n<li>webpack 的指责之一是将代码打包成 js 模块；</li>\n<li>webpack 打包命令与执行流程：<ul>\n<li>使用<code>npx webpack</code>执行打包命令；</li>\n<li>此时 webapck 会自动寻找<code>node_modules/.bin</code>下的<code>webpack.cmd</code>；</li>\n<li>如果当前目录下存在<code>node.exe</code>则执行<code>node.exe</code>与<code>webpack.js</code>；</li>\n<li>否则执行当前目录下的上级目录下的（也就是<code>node_modules</code>文件夹）<code>webpack.js</code>。</li>\n</ul>\n</li>\n<li>打包的意义：可以对 js 代码进行模块化等问题的兼容和转换，同时也可以对发布的代码进行压缩。</li>\n</ul>\n<h2 id=\"手动配置\"><a href=\"#手动配置\" class=\"headerlink\" title=\"手动配置\"></a>手动配置</h2><p>根目录下创建文件：webpack.config.js</p>\n<h2 id=\"打包原理-机制\"><a href=\"#打包原理-机制\" class=\"headerlink\" title=\"打包原理/机制\"></a>打包原理/机制</h2><p>运行npx webpack执行打包命令</p>\n<p>查看打包后的文件可以发现，该文件的主要结构为:</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">modules</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">var</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">installedModules</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {}; </span><span style=\"color: #7F848E; font-style: italic\">// 缓存依赖</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">__webpack_require__</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E06C75; font-style: italic\">moduleId</span><span style=\"color: #ABB2BF\">) { </span><span style=\"color: #7F848E; font-style: italic\">// webpack实现的require</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">installedModules</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E06C75\">moduleId</span><span style=\"color: #ABB2BF\">]) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">installedModules</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E06C75\">moduleId</span><span style=\"color: #ABB2BF\">].</span><span style=\"color: #E06C75\">exports</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">var</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">installedModules</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E06C75\">moduleId</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">i</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E06C75\">moduleId</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">l</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #7F848E; font-style: italic\">// 是否以经安装依赖</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">exports</span><span style=\"color: #ABB2BF\">: {} </span><span style=\"color: #7F848E; font-style: italic\">// 导出的对象</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">           };</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">modules</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E06C75\">moduleId</span><span style=\"color: #ABB2BF\">].</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">__webpack_require__</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">l</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ... </span><span style=\"color: #7F848E; font-style: italic\">// 一些打包模式等代码</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">__webpack_require__</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">__webpack_require__</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">)({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">: (</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">     </span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">module</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">exports</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">__webpack_require__</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #61AFEF\">eval</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"let testMode = __webpack_require__(/*! ./testMode */ </span><span style=\"color: #56B6C2\">\\\"</span><span style=\"color: #98C379\">./src/testMode.js</span><span style=\"color: #56B6C2\">\\\"</span><span style=\"color: #98C379\">);</span><span style=\"color: #56B6C2\">\\r\\n\\r\\n</span><span style=\"color: #98C379\">const a = 1;</span><span style=\"color: #56B6C2\">\\r\\n</span><span style=\"color: #98C379\">const b = 2;</span><span style=\"color: #56B6C2\">\\r\\n\\r\\n</span><span style=\"color: #98C379\">const c = a + b;</span><span style=\"color: #56B6C2\">\\r\\n\\r\\n</span><span style=\"color: #98C379\">console.log(</span><span style=\"color: #56B6C2\">\\\"</span><span style=\"color: #98C379\">webpack first</span><span style=\"color: #56B6C2\">\\\"</span><span style=\"color: #98C379\">);</span><span style=\"color: #56B6C2\">\\r\\n</span><span style=\"color: #98C379\">console.log(c);</span><span style=\"color: #56B6C2\">\\r\\n</span><span style=\"color: #98C379\">console.log(testMode);</span><span style=\"color: #56B6C2\">\\r\\n\\n\\n</span><span style=\"color: #98C379\">//# sourceURL=webpack:///./src/index.js?\"</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #7F848E; font-style: italic\">//</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">     }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   ),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   </span><span style=\"color: #98C379\">\"./src/testMode.js\"</span><span style=\"color: #ABB2BF\">: (</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">     </span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">module</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">exports</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">       </span><span style=\"color: #61AFEF\">eval</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"</span><span style=\"color: #56B6C2\">\\r\\n</span><span style=\"color: #98C379\">module.exports = 'test mode'</span><span style=\"color: #56B6C2\">\\n\\n</span><span style=\"color: #98C379\">//# sourceURL=webpack:///./src/testMode.js?\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">     }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   )</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">   ... </span><span style=\"color: #7F848E; font-style: italic\">// 其他依赖</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span></code></pre></div><p>通过该结构可以发现，webpack 是以一个立即执行函数注册全部的依赖，通过递归的方式将所有的依赖注册完成后，会将导出的内容依次的返回到上层调用。</p>\n<p>具体流程为：</p>\n<ul>\n<li>立即执行函数注册全部依赖；</li>\n<li>调用<strong>webpack_require</strong>()传入入口文件的 key(路径)，并返回其执行结果；</li>\n<li><strong>webpack_require</strong>函数根据 key 找到依赖调用其文件内容（文件内容通过函数内部的 eval 执行）并传入 module, module.exports, <strong>webpack_require</strong>(这个参数如果当前文件有依赖时才会传入)等参数；</li>\n</ul>\n<p>webpack4.0流程示意</p>\n<p><img src=\"/image/webpack/webpack4%E6%B5%81%E7%A8%8B.png\" alt=\"webpack4流程\"></p>\n<h2 id=\"html-服务器与插件\"><a href=\"#html-服务器与插件\" class=\"headerlink\" title=\"html 服务器与插件\"></a>html 服务器与插件</h2><h3 id=\"html-服务器\"><a href=\"#html-服务器\" class=\"headerlink\" title=\"html 服务器\"></a>html 服务器</h3><p>该插件是开始时常用插件，可以使 html 页面以服务器的形式发布，方便调试</p>\n<ul>\n<li>使用<code>yarn add webpack-dev-server -D</code>安装；</li>\n<li>在 webpack.config.js 中添加 devServer 对象进行配置；<ul>\n<li>port：8080 //端口</li>\n<li>progress： true //进度条</li>\n<li>contentBase： ‘./dist’ //配置目录</li>\n</ul>\n</li>\n<li>使用 npx webpack-dev-server 命令启动服务器</li>\n</ul>\n<h3 id=\"html-插件\"><a href=\"#html-插件\" class=\"headerlink\" title=\"html 插件\"></a>html 插件</h3><p>该插件可以在每次打包和运行时服务器将 html 模板文件复制到输出目录下并自动引入打包后的文件，同时该插件还支持对 html 进行压缩处理，减小打包体积</p>\n<ul>\n<li>使用<code>yarn add html-webpack-plugin -D</code>安装插件；</li>\n<li>在 webpack.config.js 中引入该插件；</li>\n<li>在 plugins 中注册改插件并配置；<ul>\n<li>template： “./public/index.html” // html 打包模板</li>\n<li>filename： “index.html” // 打包后的 html 名称,</li>\n<li>hash: true // 是否添加 hash 戳</li>\n<li>minify: {collapseWhitespace: true} // 体积压缩配置</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"plugins\"><a href=\"#plugins\" class=\"headerlink\" title=\"plugins\"></a>plugins</h2><p>plugins是一系列的webpack功能扩展的工具包，实现将一些webpack之外的功能集成到webpack中；<br>plugins定义在plugins属性中；<br>plugins一定是一个导出类；<br>plugins的定义格式为</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HtmlWebpackPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #7F848E; font-style: italic\">// 插件的配置项</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">template</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./public/index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">MiniCssExtractPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'index.css'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  })</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">],</span></span></code></pre></div><p>plugins的调用顺序不会被注册顺序影响</p>\n<h2 id=\"loader\"><a href=\"#loader\" class=\"headerlink\" title=\"loader\"></a>loader</h2><p>loader 的作用就是解析一些本事不支持的文件类型；<br>loader 定义在 webpack.config.js 的 module.rules 属性中;<br>loader 的定义格式为</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">rules</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #7F848E; font-style: italic\">// 第一种对象方式定义，loader字段为注册loader，options为loader的配置对象</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">css</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"style-loader\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">options</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E06C75\">insertAt</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'top'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #98C379\">\"css-loader\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #7F848E; font-style: italic\">// 第二种方式，直接在数组中添加loader的名称来注册loader</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">less</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"style-loader\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"css-loader\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"less-loader\"</span><span style=\"color: #ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>loader的调用规则：当有多个loader时，从右向左执行，比如解析less文件需要先使用less-loader编译为css再使用css-loader转换成模块，最后用style-loader插入到html模板中</p>\n<h3 id=\"loader的一些配置项\"><a href=\"#loader的一些配置项\" class=\"headerlink\" title=\"loader的一些配置项\"></a>loader的一些配置项</h3><ul>\n<li>include作用的文件夹</li>\n<li>exclude排除的文件夹</li>\n</ul>\n<h2 id=\"css的兼容优化\"><a href=\"#css的兼容优化\" class=\"headerlink\" title=\"css的兼容优化\"></a>css的兼容优化</h2><p>部分css属性存在浏览器兼容问题，所以需要加上浏览器前缀来进行兼容，使用postcss-loader和autoprefixer插件可以实现自动对css属性添加前缀</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">rules</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">css</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">'style-loader'</span><span style=\"color: #ABB2BF\">, ,</span><span style=\"color: #98C379\">'css-loader'</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">'postcss-loader'</span><span style=\"color: #ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span></code></pre></div><p>postcss-loader需要在css-loader之前进行处理，所以要添加在css-loader的后面，同时为了让postcss-loader知道使用哪个插件来进行添加前缀，需要在根目录下添加配置文件<code>postcss.config.js</code></p>\n<h2 id=\"css的抽离和压缩\"><a href=\"#css的抽离和压缩\" class=\"headerlink\" title=\"css的抽离和压缩\"></a>css的抽离和压缩</h2><h3 id=\"css的抽离\"><a href=\"#css的抽离\" class=\"headerlink\" title=\"css的抽离\"></a>css的抽离</h3><p>在使用style-loader时css样式会被插入到html文档的头部，这对页面的加载很不友好，所以需要提取出一个或多个的css文件以引用的方式会更好。</p>\n<p>css的抽离使用<code>mini-css-extract-plugin</code>插件来实现，使用步骤为：</p>\n<ul>\n<li>在plugins中注册插件，并配置filename属性</li>\n<li>把style-loader替换为MiniCssExtractPlugin.loader</li>\n</ul>\n<p>这样在打包的时候就会看到css文件已经从html模板中抽离出来打包为了单独的文件。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果需要打包出多个css文件如css、less、sass等文件分别打包可以创建多个<code>mini-css-extract-plugin</code>插件并在对应的loader配置中替换即可。</p></blockquote>\n<h3 id=\"css的压缩\"><a href=\"#css的压缩\" class=\"headerlink\" title=\"css的压缩\"></a>css的压缩</h3><p>css代码在抽离后不会直接被压缩所有压缩css代码需要引入其他的插件<code>optimize-css-assets-webpack-plugin</code></p>\n<p>安装好后在webpack.config.js中</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">MiniCssExtractPlugin</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'mini-css-extract-plugin'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">OptimizeCSSAssetsPlugin</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'optimize-css-assets-webpack-plugin'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">optimization</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">minimizer</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">OptimizeCSSAssetsPlugin</span><span style=\"color: #ABB2BF\">({})],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">MiniCssExtractPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'index.css'</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">rules</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">css</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #E5C07B\">MiniCssExtractPlugin</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">'css-loader'</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">'postcss-loader'</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span></code></pre></div><h2 id=\"babel的使用\"><a href=\"#babel的使用\" class=\"headerlink\" title=\"babel的使用\"></a>babel的使用</h2><p>babel是一个下一代 JavaScript 语法编译器，用于把高版本的语法（es6及以上）转换到低版本（es5）。</p>\n<p>在webpack中引入babel的方式很简单，分为几个部分：</p>\n<ul>\n<li>安装babel-loader并注册到webpack中；</li>\n<li>安装@babel/core是Babel的核心包,里面存放着转换的核心api；</li>\n<li>安装@babel/preset-env,多个plugins的集合，同时包含了es2015、es2016、es2017以及最新版本，是官方推荐的预设集合。</li>\n</ul>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>在webpack.config.js中添加<code>babel-loader</code></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">rules</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    { </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">js</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">exclude</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /node_modules/</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"babel-loader\"</span><span style=\"color: #ABB2BF\"> }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>在根目录下新建<code>.babelrc</code>文件</p>\n<p>添加预设集合和一些特殊插件</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #98C379\">\"presets\"</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"@babel/preset-env\"</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #98C379\">\"plugins\"</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #98C379\">\"@babel/plugin-proposal-class-properties\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><h2 id=\"js的优化\"><a href=\"#js的优化\" class=\"headerlink\" title=\"js的优化\"></a>js的优化</h2><h3 id=\"babel-plugin-transform-runtime和-babel-runtime\"><a href=\"#babel-plugin-transform-runtime和-babel-runtime\" class=\"headerlink\" title=\"@babel/plugin-transform-runtime和@babel/runtime\"></a>@babel/plugin-transform-runtime和@babel/runtime</h3><p>当使用了一些es6的语法时，由于转换成es5需要加入一些帮助代码，这些代码会在使用的地方都加入一遍造成重复，使打出来的包体积变大，安装插件<code>@babel/plugin-transform-runtime</code>和<code>@babel/runtime</code>后可以把这些帮助代码全部抽离出来在后续使用的时候通过引入的形式导入到文件中，从而减小打包的体积。</p>\n<p>安装使用：</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">npm</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">install</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">--</span><span style=\"color: #E06C75\">save</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">dev</span><span style=\"color: #ABB2BF\"> @</span><span style=\"color: #E06C75\">babel</span><span style=\"color: #56B6C2\">/</span><span style=\"color: #E06C75\">plugin</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">transform</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">runtime</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 或</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> @</span><span style=\"color: #E06C75\">babel</span><span style=\"color: #56B6C2\">/</span><span style=\"color: #E06C75\">plugin</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">transform</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">runtime</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #56B6C2\">---------------------------------</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">npm</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">install</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">--</span><span style=\"color: #E06C75\">save</span><span style=\"color: #ABB2BF\"> @</span><span style=\"color: #E06C75\">babel</span><span style=\"color: #56B6C2\">/</span><span style=\"color: #E06C75\">runtime</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 或</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> @</span><span style=\"color: #E06C75\">babel</span><span style=\"color: #56B6C2\">/</span><span style=\"color: #E06C75\">runtime</span></span></code></pre></div><p><code>@babel/plugin-transform-runtime</code>为开发时依赖在打包时就将代码加入到包中，而<code>@babel/runtime</code>在运行时根据具体情况来判断如何使用加入的帮助代码。</p>\n<h3 id=\"babel-polyfill\"><a href=\"#babel-polyfill\" class=\"headerlink\" title=\"@babel/polyfill\"></a>@babel/polyfill</h3><p>polyfill是一个垫片程序，该程序通过es5模拟完整的es6+环境，因此可以安全的使用新的内置函数。</p>\n<p>安装使用：</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> @</span><span style=\"color: #E06C75\">babel</span><span style=\"color: #56B6C2\">/</span><span style=\"color: #E06C75\">polyfill</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #56B6C2\">--------------------</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 在入口文件引入</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"@babel/polyfill\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 或</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"@babel/polyfill\"</span><span style=\"color: #ABB2BF\">；</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"影响\"><a href=\"#影响\" class=\"headerlink\" title=\"影响\"></a>影响</h3><p>使用<code>@babel/polyfill</code>后会导致Promise，Set和Map这些内置的插件污染全局命名空间，有时会导致引入的库或被其他人引入时发生意外的bug，在v7以后官方提供了新的替代方案来代替使用polyfill。</p>\n<h2 id=\"polyfill的升级方案\"><a href=\"#polyfill的升级方案\" class=\"headerlink\" title=\"polyfill的升级方案\"></a>polyfill的升级方案</h2><p>@babel/polyfill不必再安装，转而需要依靠core-js和regenerator-runtime（详细原因请看作者的阐述），替代方案用法如下：</p>\n<p>安装两个新的包</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">core</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">js</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">regenerator</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">runtime</span></span></code></pre></div><p>在.babelrc中配置</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #98C379\">\"plugins\"</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #98C379\">\"@babel/plugin-transform-runtime\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #98C379\">\"corejs\"</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #98C379\">\"helpers\"</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #98C379\">\"regenerator\"</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #98C379\">\"useESModules\"</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>然后在入口文件中导入</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"core-js/stable\"</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"regenerator-runtime/runtime\"</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>打包后包体积大约会增大400k</p></blockquote>\n<h2 id=\"全局变量的处理\"><a href=\"#全局变量的处理\" class=\"headerlink\" title=\"全局变量的处理\"></a>全局变量的处理</h2><p>当引入jQuery这些依赖时，我们希望是在window上可以获取到全局的<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.452ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"33.937ex\" height=\"2.149ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 15000 950\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><text data-variant=\"italic\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\" font-style=\"italic\">，</text></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">这</text></g><g data-mml-node=\"mi\" transform=\"translate(2000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">时</text></g><g data-mml-node=\"mi\" transform=\"translate(3000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">可</text></g><g data-mml-node=\"mi\" transform=\"translate(4000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">以</text></g><g data-mml-node=\"mi\" transform=\"translate(5000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">使</text></g><g data-mml-node=\"mi\" transform=\"translate(6000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">用</text></g><g data-mml-node=\"mi\" transform=\"translate(7000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">一</text></g><g data-mml-node=\"mi\" transform=\"translate(8000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">下</text></g><g data-mml-node=\"mi\" transform=\"translate(9000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">几</text></g><g data-mml-node=\"mi\" transform=\"translate(10000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">种</text></g><g data-mml-node=\"mi\" transform=\"translate(11000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">方</text></g><g data-mml-node=\"mi\" transform=\"translate(12000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">法</text></g><g data-mml-node=\"mi\" transform=\"translate(13000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">来</text></g><g data-mml-node=\"mi\" transform=\"translate(14000,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">吧</text></g></g></g></svg></mjx-container>暴露到全局中。</p>\n<h3 id=\"使用expose-loader\"><a href=\"#使用expose-loader\" class=\"headerlink\" title=\"使用expose-loader\"></a>使用expose-loader</h3><p>安装loader</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">expose</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">loader</span></span></code></pre></div><p>使用</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 在入口文件中</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">$</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">from</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">'expose?$!jquery'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 或</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 在webpack.config.js文件中加入</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'jquery'</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'expose-loader?$'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><h3 id=\"使用webpack插件\"><a href=\"#使用webpack插件\" class=\"headerlink\" title=\"使用webpack插件\"></a>使用webpack插件</h3><p>这种方式是使用webpack插件在每个模块中都注入一个$</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 在webpack.config.js文件中引入webpack插件</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"webpack\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 在plugins选项中加入</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">ProvidePlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">$</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'jquery'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"通过cdn方式引入\"><a href=\"#通过cdn方式引入\" class=\"headerlink\" title=\"通过cdn方式引入\"></a>通过cdn方式引入</h3><p>这种方式是通过cdn的方式在html模板中加入script标签引入，这和以前的引入方式没什么区别，只有一点需要注意，当通过cdn引入的时候是不需要在通过<code>import $ from 'jquery'</code>等方式引入的，因为在这时再引入的话会导致jquery打包到生产中造成重复和包体积增大。</p>\n<p>所以在使用cdn引入后如果一定要在通过模块的方式引入的话，可以在webpack配置中加上<code>externals</code>属性来进行忽略</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">externals</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">jquery</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'$'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><h2 id=\"图片打包\"><a href=\"#图片打包\" class=\"headerlink\" title=\"图片打包\"></a>图片打包</h2><p>webpack中使用图片的三种方式，分别是</p>\n<ul>\n<li>在js文件中使用</li>\n<li>使用css background(url)</li>\n<li>使用image标签</li>\n</ul>\n<h3 id=\"在js文件中使用\"><a href=\"#在js文件中使用\" class=\"headerlink\" title=\"在js文件中使用\"></a>在js文件中使用</h3><p>在js中使用图片时不能直接给Image对象设置路径字符串，这样的话会被识别为普通字符串而不是一个图片资源</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 错误的使用方式</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">img</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Image</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">img</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">src</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">'./tree01.png'</span><span style=\"color: #ABB2BF\">;</span></span></code></pre></div><p>应该是通过<code>import/require</code>方式导入到文件中，在进行使用；通过<code>import/require</code>方式导入的文件会在内部生成一个新的图片并返回新图片的地址</p>\n<p>安装使用</p>\n<p>首先要安装file-loader来帮助实现上面的说的功能</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">file</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span></code></pre></div><p>在webpack.config.js中配置loader</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 在module选项中插入</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">(png</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpg</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">gif</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpeg)</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #7F848E; font-style: italic\">// 匹配以png、jpg、jpeg、gif结尾的资源</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'file-loader'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">},</span></span></code></pre></div><p>在js文件中导入资源</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">treeImg</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">from</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">'./tree01.png'</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">treeImg</span><span style=\"color: #ABB2BF\">); </span><span style=\"color: #7F848E; font-style: italic\">// 是一个生成的新的以hash戳命名的图片 eg：c49d75b8b21e664625d3f7734a8cd8e9.png</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">img</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Image</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">img</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">src</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">treeImg</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">document</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">body</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">appendChild</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">img</span><span style=\"color: #ABB2BF\">);</span></span></code></pre></div><p>这个时候运行npx webpack查看打包路径会发现图片已经可以打包到文件夹中。</p>\n<h3 id=\"使用css-background-url\"><a href=\"#使用css-background-url\" class=\"headerlink\" title=\"使用css background(url)\"></a>使用css background(url)</h3><p>同样的使用到了上面说的<code>file-loader</code>只不过是把引入图片的位置从js文件转移到了css文件中，通过css文件中使用<code>background-image: url('./anim8.png');</code>样式可以起到和导入一样的效果，webpack会把<code>url()</code>中的路径解析生成一个新的图片并输出到打包路径中。</p>\n<div class=\"language-css\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">css</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">body</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  background-image: </span><span style=\"color: #56B6C2\">url</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'./anim8.png'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">/* 相当于 */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">/* background-image: url(require('./anim8.png')); */</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><h3 id=\"使用image标签\"><a href=\"#使用image标签\" class=\"headerlink\" title=\"使用image标签\"></a>使用image标签</h3><p>在html页面中直接使用image标签来进行打包的话需要额外使用到另一个loader：html-withimg-loader，使用该loader可以达到和上面一样的效果。</p>\n<p>安装使用</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">html</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">withimg</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span></code></pre></div><p>配置:html-withimg-loader需要搭配file-loader一起使用，在使用的时候需要把file-loader的esModule设置为flase，不然导出以后src会是<code>{default: 图片地址}</code></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">html</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'html-withimg-loader'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">},</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">(png</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpg</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">gif</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpeg)</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: { </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"file-loader\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">options</span><span style=\"color: #ABB2BF\">: { </span><span style=\"color: #E06C75\">esModule</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\"> } }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">},</span></span></code></pre></div><h3 id=\"优化一下\"><a href=\"#优化一下\" class=\"headerlink\" title=\"优化一下\"></a>优化一下</h3><p>项目打包以后我们不想所有的图片都会发送一个http请求，而是想小图片直接以base64的形式打包到代码中，而大一些的图片才发送请求；此时我们只需要把上面的<code>file-loader</code>换成<code>url-loader</code>即可。</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 安装</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">url</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 配置</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// {</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">//   test: /\\.(png|jpg|gif|jpeg)$/,</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">//   use: { loader: \"file-loader\", options: { esModule: false } }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// }</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 把上面的配置替换为下面的配置</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">(png</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpg</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">gif</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpeg)</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: { </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"url-loader\"</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">options</span><span style=\"color: #ABB2BF\">: </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      { </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">esModule</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">limit</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">200</span><span style=\"color: #56B6C2\">*</span><span style=\"color: #D19A66\">1024</span><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">// 按字节算，这里是200*1024=200k</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      } </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果同样有搭配<code>html-withimg-loader</code>的需求不要忘记配置一下<code>esModule: false</code></p></blockquote>\n<h2 id=\"打包文件的分类\"><a href=\"#打包文件的分类\" class=\"headerlink\" title=\"打包文件的分类\"></a>打包文件的分类</h2><p>打包后的文件我们希望像开发时一样可以按照css、js、img等资源类型进行分类，所以我们需要在配置上简单配置一下。</p>\n<h3 id=\"js输出路径\"><a href=\"#js输出路径\" class=\"headerlink\" title=\"js输出路径\"></a>js输出路径</h3><p>直接在output.filename选项中修改即可</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">// 输出配置</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"js/bundle.js\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #7F848E; font-style: italic\">// 输出的文件名</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">), </span><span style=\"color: #7F848E; font-style: italic\">// 输出的目录</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">},</span></span></code></pre></div><h3 id=\"css输出路径\"><a href=\"#css输出路径\" class=\"headerlink\" title=\"css输出路径\"></a>css输出路径</h3><p>在抽离css的插件处配置<code>outputPath</code>即可</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">MiniCssExtractPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"css/index.css\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">]</span></span></code></pre></div><h3 id=\"img输出路径\"><a href=\"#img输出路径\" class=\"headerlink\" title=\"img输出路径\"></a>img输出路径</h3><p>在<code>url-loader</code>的选项中配置<code>outputPath</code>即可</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">(png</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpg</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">gif</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpeg)</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"url-loader\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">options</span><span style=\"color: #ABB2BF\">: { </span><span style=\"color: #E06C75\">esModule</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">limit</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">outputPath</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"img/\"</span><span style=\"color: #ABB2BF\"> },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">]</span></span></code></pre></div><h3 id=\"关于资源访问时的前缀路径\"><a href=\"#关于资源访问时的前缀路径\" class=\"headerlink\" title=\"关于资源访问时的前缀路径\"></a>关于资源访问时的前缀路径</h3><p>项目发布后资源如果出于cdn或服务器上的话，我们会希望在图片、css等资源访问时加上域名等前缀，此时我们只需要在webpack.config.js中配置<code>output.publicPath</code>属性即可</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">// 输出配置</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"js/bundle.js\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #7F848E; font-style: italic\">// 输出的文件名</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">), </span><span style=\"color: #7F848E; font-style: italic\">// 输出的目录</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">publicPath</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'http://www.example.com'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">},</span></span></code></pre></div><p>此时所有的资源都会自动加上这个前缀，但是需要注意的是此时图片的路径上会少一个<code>/</code>所以添加了publicPath以后需要在img的输出路径上多加以个<code>/</code></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">(png</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpg</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">gif</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpeg)</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"url-loader\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">options</span><span style=\"color: #ABB2BF\">: { </span><span style=\"color: #E06C75\">esModule</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">limit</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">outputPath</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"/img/\"</span><span style=\"color: #ABB2BF\"> },</span><span style=\"color: #7F848E; font-style: italic\">// 需要多加一个/</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">]</span></span></code></pre></div><p>另外如果只想在图片或css等某一资源上添加前缀的话在对应的loader或插件（具体取决于使用什么做的输出文件操作）上设置publicPath就可以了</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 以图片为例</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">module</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">(png</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpg</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">gif</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">jpeg)</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">loader</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"url-loader\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">options</span><span style=\"color: #ABB2BF\">: { </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">esModule</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">false</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">limit</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">outputPath</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"/img/\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #7F848E; font-style: italic\">// 需要多加一个/</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">publicPath</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #98C379\">'http://www.example.com'</span><span style=\"color: #ABB2BF\"> },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">]</span></span></code></pre></div><h2 id=\"多页面打包\"><a href=\"#多页面打包\" class=\"headerlink\" title=\"多页面打包\"></a>多页面打包</h2><p>多页面程序，顾名思义就是拥有多个入口页面并且每个页面有独立的入口文件，这是与前面的单页面模式最大的不同点。</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p>要打包多页面当然需要准的是多个入口文件</p>\n<p>首先准备一个空的node项目，然后在项目中添加</p>\n<ul>\n<li>在src文件夹下创建<code>home.js</code>、<code>other.js</code>两个入口文件， 并在里面随便写点代码（比如console）</li>\n<li>在public文件夹下创建<code>index.html</code>模板</li>\n<li>安装<code>webpack</code>、<code>webpack-cli</code>、<code>html-webpack-plugin</code>依赖</li>\n<li>添加webpack配置文件</li>\n</ul>\n<h3 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>下面我们来开始进行配置文件的编写</p>\n<p><em>第一步</em></p>\n<p>第一步肯定是编写入口文件</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"development\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">home</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/other.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>这里入口文件的配置与单页面配置不同的是要以对象的形式进行配置，分别配置为对应的入口文件即可，其中key值会作为后面打包文件的文件名</p>\n<p><em>第二步</em></p>\n<p>第二步添加一下打包文件的输出配置</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"development\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/other.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"bundle.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>然后运行一下<code>npx webpack</code>，看看效果，不出意外的会产生报错</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">ERROR</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">in</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">chunk</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\"> [</span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">bundle</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">js</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">Conflict</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E06C75\">Multiple</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">chunks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">emit</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">assets</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">the</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">same</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">bundle</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">js</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E06C75\">chunks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">and</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\">)</span></span></code></pre></div><p>这里报错信息告诉我们多个模块将发射为同名的文件(home和other)，这证明我们的<code>filename: \"bundle.js\"</code>配置的有错误，<br>此时打开我们输出的<code>bundle.js</code>文件会发现只有<code>index.js</code>打包成功了，这显然不是我们想要的，为了解决这个问题，需要把这里修改成根据我们打包的文件自动的生成文件名，这样就不怕文件名冲突了</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"development\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/other.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">-   </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"bundle.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">+   </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"[name].js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>这里可以看到我们从<code>bundle.js</code>改成了<code>[name].js</code>，再次运行<code>npx webpack</code>，可以看到将两个文件都打包成功并成功以各自的名称进行命名</p>\n<p><em>第三步</em></p>\n<p>多页面顾名思义，肯定也是需要多个html页面来作为载体，所以这里继续使用<code>html-webpack-plugi</code>这个插件进行html和打包文件的整合和输出， 先看配置</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HtmlWebpackPlugin</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"html-webpack-plugin\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"development\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/other.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"[name].js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HtmlWebpackPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">template</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./public/index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HtmlWebpackPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"other.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">template</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./public/index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span></code></pre></div><p>由于是多页面的打包，所以我们的需求肯定是输出多个html页面，但是<code>html-webpack-plugin</code>的配置中<code>filename</code>并不能写成数组、也不能像<code>output</code>属性写成<code>[name].html</code>，所以我们就通过再new一个插件的实例并分别配置页面输出来解决这个问题。</p>\n<p>现在运行一下命令<code>npx webpack</code>，成功打包后，任意打开一个打包后的html页面，我们会发现他们把两个入口文件都引入了</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">&lt;!-- index.html --&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&lt;!</span><span style=\"color: #E06C75\">DOCTYPE</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">html</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E06C75\">html</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">lang</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">\"en\"</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E06C75\">head</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  &lt;</span><span style=\"color: #E06C75\">meta</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">charset</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">\"UTF-8\"</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  &lt;</span><span style=\"color: #E06C75\">meta</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">name</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">\"viewport\"</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">content</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">\"width=device-width, initial-scale=1.0\"</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  &lt;</span><span style=\"color: #E06C75\">title</span><span style=\"color: #ABB2BF\">&gt;Document&lt;/</span><span style=\"color: #E06C75\">title</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&lt;/</span><span style=\"color: #E06C75\">head</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E06C75\">body</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&lt;</span><span style=\"color: #E06C75\">script</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">src</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">\"home.js\"</span><span style=\"color: #ABB2BF\">&gt;&lt;/</span><span style=\"color: #E06C75\">script</span><span style=\"color: #ABB2BF\">&gt;&lt;</span><span style=\"color: #E06C75\">script</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">src</span><span style=\"color: #ABB2BF\">=</span><span style=\"color: #98C379\">\"other.js\"</span><span style=\"color: #ABB2BF\">&gt;&lt;/</span><span style=\"color: #E06C75\">script</span><span style=\"color: #ABB2BF\">&gt;&lt;/</span><span style=\"color: #E06C75\">body</span><span style=\"color: #ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">&lt;/</span><span style=\"color: #E06C75\">html</span><span style=\"color: #ABB2BF\">&gt;</span></span></code></pre></div><p>虽然说打包成功了，但是都引入了全部的入口文件那直接打包到一个文件中岂不美哉，所以我们还要改一下配置</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">HtmlWebpackPlugin</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"html-webpack-plugin\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"development\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/other.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"[name].js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HtmlWebpackPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">template</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./public/index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">chunks</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"home\"</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">HtmlWebpackPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"other.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">template</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./public/index.html\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">chunks</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"other\"</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span></code></pre></div><p>这次我们给每一个页面的配置添加了一个<code>chunks</code>配置项，这是告诉插件我们当前这个html想要引入那些文件，<br>里面填写我们想要引入的文件名就可以了。</p>\n<p>再次运行<code>npx webpack</code>，这次可以看到在dist文件夹下，正确的打包了两个入口文件<code>index.js</code>和<code>other.js</code>以及两个入口html<code>index.html</code>和<code>other.html</code>并且两个文件中都正确的引入了对应的入口文件。</p>\n<p>到此为止一个多页面应用的配置和打包流程就算结束了，可以拿着打好的包丢到服务器里去浪里个浪啦~</p>\n<h2 id=\"souce-map\"><a href=\"#souce-map\" class=\"headerlink\" title=\"souce-map\"></a>souce-map</h2><p>source-map的出现是为了解决当我们的程序进行了打包压缩后由于代码被压缩在一行或几行的情况下无法调试错误的痛点。</p>\n<p>source-map是一个信息文件，里面存储的是转换后与转换前的代码的对应关系，当调试工具支持source-map功能时便可以根据source-map中的信息将报错正常的显示出来。</p>\n<p>在webpack中是通过devtool选项来进行source-map的生成以下列举几个选项：</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>生产环境</th>\n<th>输出</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>eval</td>\n<td>不推荐</td>\n<td>生成后的代码（如经过babel转换过后的）</td>\n</tr>\n<tr>\n<td>source-map</td>\n<td>可行</td>\n<td>输出源代码和映射文件，可有准确的输出报错行和列</td>\n</tr>\n<tr>\n<td>eval-source-map</td>\n<td>不推荐</td>\n<td>输出源代码但是不产生映射文件，是通过在打包文件内通过eval方式输出报错信息</td>\n</tr>\n<tr>\n<td>cheap-source-map</td>\n<td>不推荐</td>\n<td>低开销的source-map，不能定位到列</td>\n</tr>\n<tr>\n<td>cheap-eval-source-map</td>\n<td>不推荐</td>\n<td>低开销的eval-source-map，不能定位到列</td>\n</tr>\n<tr>\n<td>cheap-module-source-map</td>\n<td>不推荐</td>\n<td>输出源代码和映射文件，仅输出行信息</td>\n</tr>\n<tr>\n<td>cheap-module-eval-source-map</td>\n<td>不推荐</td>\n<td>输出源代码但没有映射文件，仅输出行信息</td>\n</tr>\n<tr>\n<td>hidden-source-map</td>\n<td>可行</td>\n<td>与source-map相同，但是不会添加引用注释，不向浏览器暴露source map</td>\n</tr>\n<tr>\n<td>nosources-source-map</td>\n<td>可行</td>\n<td>生成的source map不会包含源码</td>\n</tr>\n</tbody></table>\n<h3 id=\"其他方式\"><a href=\"#其他方式\" class=\"headerlink\" title=\"其他方式\"></a>其他方式</h3><p>来自<a href=\"https://www.webpackjs.com/configuration/devtool/#devtool\">官网</a>上的其他配置方式</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><em>你可以直接使用</em> <a href=\"https://www.webpackjs.com/plugins/source-map-dev-tool-plugin/\">SourceMapDevToolPlug</a> <em>/</em> <a href=\"https://www.webpackjs.com/plugins/eval-source-map-dev-tool-plugin/\">EvalSourceMapDevToolPlugin</a> <em>来替代使用</em> <code>devtool</code> <em>选项，因为它有更多的选项。切勿同时使用</em> <code>devtool</code> <em>选项和</em> <code>SourceMapDevToolPlugin</code><em>/</em><code>EvalSourceMapDevToolPlugin</code> <em>插件。</em><code>devtool</code> <em>选项在内部添加过这些插件，所以你最终将应用两次插件。</em></p></blockquote>\n<h2 id=\"watch\"><a href=\"#watch\" class=\"headerlink\" title=\"watch\"></a>watch</h2><p>watch可以在运行了webpack打包命令后，持续的监听文件变化来重新编译打包。</p>\n<h3 id=\"配置-2\"><a href=\"#配置-2\" class=\"headerlink\" title=\"配置\"></a>配置</h3><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">watch</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">watchOptions</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">aggregateTimeout</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">500</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">poll</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">1000</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">ignored</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /node_modules/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><ul>\n<li>aggregateTimeout防抖时间，超过指定时间未修改才进行打包</li>\n<li>poll毫秒单位的轮询时间间隔</li>\n<li>ignored排除一些大的文件夹</li>\n</ul>\n<h2 id=\"其他插件\"><a href=\"#其他插件\" class=\"headerlink\" title=\"其他插件\"></a>其他插件</h2><h3 id=\"clean-webpack-plugin\"><a href=\"#clean-webpack-plugin\" class=\"headerlink\" title=\"clean-webpack-plugin\"></a>clean-webpack-plugin</h3><p>这个插件的作用是清空output.path文件夹，所以可以在打包时利用该插件先清空掉原有的dist文件夹，然后生成新的打包文件，避免出现打包文件叠加或者缓存问题。</p>\n<h4 id=\"安装和使用\"><a href=\"#安装和使用\" class=\"headerlink\" title=\"安装和使用\"></a>安装和使用</h4><p>运行命令</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">clean</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">webpack</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">plugin</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span></code></pre></div><p>在配置文件中配置</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> { </span><span style=\"color: #E5C07B\">CleanWebpackPlugin</span><span style=\"color: #ABB2BF\"> } </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"clean-webpack-plugin\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">CleanWebpackPlugin</span><span style=\"color: #ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><h3 id=\"copy-webpack-plugin\"><a href=\"#copy-webpack-plugin\" class=\"headerlink\" title=\"copy-webpack-plugin\"></a>copy-webpack-plugin</h3><p>这个插件的作用是将一个指定目录copy到output.path文件夹，利用这个插件我们可以在打包时把一些静态文件（如图片、音频、视频等）自动的拷贝到打包目录下。</p>\n<h4 id=\"安装和使用-1\"><a href=\"#安装和使用-1\" class=\"headerlink\" title=\"安装和使用\"></a>安装和使用</h4><p>运行命令</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">copy</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">webpack</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">plugin</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span></code></pre></div><p>在配置文件中配置</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">CopyWebpackPlugin</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"copy-webpack-plugin\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">CopyWebpackPlugin</span><span style=\"color: #ABB2BF\">([</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">from</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'./static'</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">to</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'./static'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ])</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><h2 id=\"webpack跨域\"><a href=\"#webpack跨域\" class=\"headerlink\" title=\"webpack跨域\"></a>webpack跨域</h2><h3 id=\"devServer代理\"><a href=\"#devServer代理\" class=\"headerlink\" title=\"devServer代理\"></a>devServer代理</h3><p>dev-server 使用了非常强大的 http-proxy-middleware 包来将请求代理到单独的后端服务器上。</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">devServer</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">proxy</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #98C379\">\"/api\"</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">target</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"http://192.168.1.1:8088\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">pathRewrite</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #98C379\">\"^/api\"</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">''</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>这样就可以实现跨域访问后端api了。</p>\n<h3 id=\"前端模拟数据\"><a href=\"#前端模拟数据\" class=\"headerlink\" title=\"前端模拟数据\"></a>前端模拟数据</h3><p>同样是基于<code>devServer</code>选项来配置，不过这次用的是一个钩子——before</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">devServer</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">before</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">app</span><span style=\"color: #ABB2BF\">){</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">get</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'/api/user'</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">req</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">res</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E5C07B\">res</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">json</span><span style=\"color: #ABB2BF\">({ </span><span style=\"color: #E06C75\">custom</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'response'</span><span style=\"color: #ABB2BF\"> });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>这里devServer会自动传入一个app参数，这个参数就是express的实例对象，多以我们就可以在这个方法内像写后台一样写一些简单的后端代码来模拟数据。</p>\n<h3 id=\"前后端代码写在一起（此方法只适合nodejs服务器）\"><a href=\"#前后端代码写在一起（此方法只适合nodejs服务器）\" class=\"headerlink\" title=\"前后端代码写在一起（此方法只适合nodejs服务器）\"></a>前后端代码写在一起（此方法只适合nodejs服务器）</h3><h4 id=\"express版本\"><a href=\"#express版本\" class=\"headerlink\" title=\"express版本\"></a>express版本</h4><p>安装中间件<code>webpack-dev-middleware</code></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// server.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">express</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"express\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"webpack\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpackDev</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"webpack-dev-middleware\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpackConfig</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"./webpack.config.js\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">express</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">complier</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">webpack</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">webpackConfig</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">use</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #61AFEF\">webpackDev</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">complier</span><span style=\"color: #ABB2BF\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">get</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'/user'</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">req</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">res</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">// do something</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">listen</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">8080</span><span style=\"color: #ABB2BF\">);</span></span></code></pre></div><h4 id=\"koa2版本\"><a href=\"#koa2版本\" class=\"headerlink\" title=\"koa2版本\"></a>koa2版本</h4><p>安装中间件<code>koa-webpack</code></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// server.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Koa</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'koa'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'webpack'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">config</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'./webpack.config.js'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">koaWebpack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'koa-webpack'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Koa</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">compiler</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">webpack</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">config</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">middleware</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">await</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">koaWebpack</span><span style=\"color: #ABB2BF\">({ </span><span style=\"color: #E06C75\">compiler</span><span style=\"color: #ABB2BF\"> });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\"> </span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">use</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">middleware</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">app</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">listen</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">3000</span><span style=\"color: #ABB2BF\">);</span></span></code></pre></div><p>这样前后端就是运行在同一个服务器的状态了，所以也就不会发生跨域问题了。</p>\n<h2 id=\"resolve\"><a href=\"#resolve\" class=\"headerlink\" title=\"resolve\"></a>resolve</h2><p>resolve选项能设置模块如何被解析。</p>\n<h3 id=\"modules\"><a href=\"#modules\" class=\"headerlink\" title=\"modules\"></a>modules</h3><p>告诉 webpack 解析模块时应该搜索的目录。</p>\n<p>使用绝对路径，将只在给定目录中搜索。</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">resolve</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">modules</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"node_modules\"</span><span style=\"color: #ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><p>只在<code>node_modules</code>目录中搜索</p>\n<h3 id=\"alias\"><a href=\"#alias\" class=\"headerlink\" title=\"alias\"></a>alias</h3><p>给资源配置别名，可以是某一目录下或某一文件</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">resolve</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">modules</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"node_modules\"</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">alias</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #98C379\">'@'</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">'src'</span><span style=\"color: #ABB2BF\">),</span><span style=\"color: #7F848E; font-style: italic\">// 设置src前缀为@</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 文件中使用时</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">Test</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">from</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">'@/Test.js'</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"mainFields\"><a href=\"#mainFields\" class=\"headerlink\" title=\"mainFields\"></a>mainFields</h3><p>当从 npm 包中导入模块时，此选项将决定在 package.json 中使用哪个字段导入模块。</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">resolve</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">modules</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"node_modules\"</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">alias</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #98C379\">'@'</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">'src'</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">mainFields</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">\"style\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"main\"</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #7F848E; font-style: italic\">// 首先使用style字段导入模块，找不到再使用main字段导入模块</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 文件中引用</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">import</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">'bootstrap'</span><span style=\"color: #ABB2BF\">;</span></span></code></pre></div><h2 id=\"定义环境变量\"><a href=\"#定义环境变量\" class=\"headerlink\" title=\"定义环境变量\"></a>定义环境变量</h2><p>使用webpack的内置插件<code>DefinePlugin</code></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Webpack</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">DefinePlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">MODE</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">JSON</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">stringify</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"dev\"</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    })</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 文件中使用 index.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">if</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E5C07B\">MODE</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">===</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"dev\"</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"dev\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">} </span><span style=\"color: #C678DD\">else</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"prod\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>定义的值会去掉引号后传入到环境变量中，所以如果传入字符串需要用JSON.stringify转换一下，如果是boolean和number等类型则不需要转换直接写作<code>FLAG:'true'</code>、<code>NUM:'1'</code>就可以了；如果是表达式也可以和number一样直接写，这样会直接传入表达式的计算结果如：<code>EXPRESSION:'1+1'</code>的打印值为2</p></blockquote>\n<h2 id=\"区分环境\"><a href=\"#区分环境\" class=\"headerlink\" title=\"区分环境\"></a>区分环境</h2><p>在开发中我们往往开发环境和生产环境的配置并不相同，为了不在每次打包时都去更改配置文件（费力且容易出错）我们可以使用<code>webpack-merge</code>模块来实现自动的注入不同环境的配置。</p>\n<h3 id=\"安装使用\"><a href=\"#安装使用\" class=\"headerlink\" title=\"安装使用\"></a>安装使用</h3><p><strong>安装模块</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">webpack</span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E06C75\">merge</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span></code></pre></div><p><strong>使用</strong></p>\n<p>merge允许我们把多个配置文件合并起来使用，所以我们可以在根目录下创建<code>webpack.dev.js</code>和<code>webpack.prod.js</code>来分别配置不同环境的配置，下面以dev环境做个例子</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> { </span><span style=\"color: #E5C07B\">smart</span><span style=\"color: #ABB2BF\"> } </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"webpack-merge\"</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">base</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">reuqire</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"./webpack.base.js\"</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #7F848E; font-style: italic\">// 引入公用配置</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">smart</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">base</span><span style=\"color: #ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'development'</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">// 其他配置</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})</span></span></code></pre></div><p>在启动时我们只需要指定不同的配置文件即可实现不同环境的切换</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 生产环境</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">npm</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">run</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">dev</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">--</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">--</span><span style=\"color: #E06C75\">config</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">dev</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 开发环境</span></span>\n<span class=\"line\"><span style=\"color: #E06C75\">npm</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">run</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">build</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">--</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">--</span><span style=\"color: #E06C75\">config</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">prod</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">js</span></span></code></pre></div><h2 id=\"一些优化点\"><a href=\"#一些优化点\" class=\"headerlink\" title=\"一些优化点\"></a>一些优化点</h2><h3 id=\"noParse忽略无依赖大型库\"><a href=\"#noParse忽略无依赖大型库\" class=\"headerlink\" title=\"noParse忽略无依赖大型库\"></a>noParse忽略无依赖大型库</h3><p>noParse的作用是防止 webpack 解析那些任何与给定正则表达式相匹配的文件。忽略的文件中不应该含有 import, require, define 的调用，或任何其他导入机制。忽略大型的 library 可以提高构建性能。</p>\n<p><strong>应用场景</strong></p>\n<p>在引入库时，明确的知道该库不存在其他依赖且该库体积较大时，比如引入JQuery时</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">smart</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">base</span><span style=\"color: #ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">noParse</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /jquery</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">lodash/</span><span style=\"color: #ABB2BF\">,  </span><span style=\"color: #7F848E; font-style: italic\">// 正则的方式</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #61AFEF\">noParse</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">content</span><span style=\"color: #ABB2BF\">) { </span><span style=\"color: #7F848E; font-style: italic\">// webpack 3.0.0 写法</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">return</span><span style=\"color: #E06C75\"> /jquery</span><span style=\"color: #ABB2BF\">|</span><span style=\"color: #E06C75\">lodash/</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">test</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">content</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})</span></span></code></pre></div><h3 id=\"IgnorePlugin忽略依赖包的指定文件\"><a href=\"#IgnorePlugin忽略依赖包的指定文件\" class=\"headerlink\" title=\"IgnorePlugin忽略依赖包的指定文件\"></a>IgnorePlugin忽略依赖包的指定文件</h3><p>IgnorePlugin是webpack的内置插件，作用是忽略掉指定依赖包下的指定文件，如moment的本地化文件。</p>\n<p><strong>应用场景</strong></p>\n<p>IgnorePlugin接受两个参数，分别是</p>\n<ul>\n<li>匹配(test)资源请求路径的正则表达式；</li>\n<li>匹配(test)资源上下文（目录）的正则表达式（可选）。</li>\n</ul>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">'webpack'</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">smart</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">base</span><span style=\"color: #ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">IgnorePlugin</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">/</span><span style=\"color: #C678DD\">^</span><span style=\"color: #56B6C2\">\\.\\/</span><span style=\"color: #E06C75\">locale</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span><span style=\"color: #E06C75\"> /moment</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})</span></span></code></pre></div><h3 id=\"DllPlugin实现输出dll库\"><a href=\"#DllPlugin实现输出dll库\" class=\"headerlink\" title=\"DllPlugin实现输出dll库\"></a>DllPlugin实现输出dll库</h3><p>DllPlugin允许webpack将bundles文件进行拆分，来提升构建速度</p>\n<p>可以把不会变动的大型库通过dll的方式打包出去，如React、Vue等依赖，然后在构建项目时就会先去dll清单中寻找相关依赖，如果找到了就不会重复打包，找不到时再进行打包操作。</p>\n<p><strong>使用步骤</strong></p>\n<ul>\n<li>在根目录下创建一个专门用来打包dll的配置文件，如webapck.dll.test.js；</li>\n<li>在dll配置文件中使用DllPlugin来配置打包信息；</li>\n<li>使用命令行传参数的方式运行dll的配置文件，单独打包；</li>\n<li>在html模板和项目主webpack配置中引入dll；</li>\n</ul>\n<p><strong>out.library</strong></p>\n<p><code>out.library</code>是将模块输出为一个可以被直接使用的包，也就是会在webpack打包后将模块赋值给一个变量，变量名即为<code>library</code>的值，默认使用<code>var</code>方式导出</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// out.library = 'test_dll' 时导出的模块</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">var</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">test_dll</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">(</span><span style=\"color: #C678DD\">function</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">modules</span><span style=\"color: #ABB2BF\">) { </span><span style=\"color: #7F848E; font-style: italic\">// webpackBootstrap</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">__webpack_require__</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E5C07B\">__webpack_require__</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">s</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #7F848E; font-style: italic\">// 依赖模块</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">})</span></span></code></pre></div><p><strong>DllPlugin</strong></p>\n<p>webpack的内置插件，可以单独写在一个配置文件里使用。</p>\n<ul>\n<li>path：manifest json 文件的绝对路径</li>\n<li>name：暴露出的 DLL 的函数名要与 <code>out.library</code>相同</li>\n</ul>\n<p><strong>DllReferencePlugin</strong></p>\n<p>webpack的内置插件，应该写在项目打包时所使用的配置文件中</p>\n<ul>\n<li>manifest：DllPlugin导出的manifest文件的绝对路径</li>\n</ul>\n<p><strong>配置示例</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// webapck.dll.test.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"webpack\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'development'</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">'./src/test.js'</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">join</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"[name].dll.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">library</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"[name]_dll\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webpack</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">DllPlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">join</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"[name]-manifest.json\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">            </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"[name]_dll\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        })</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// webpack.config.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webapck</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"webpack\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"development\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"bundle.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webapck</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">DllReferencePlugin</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">manifest</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">'dist'</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">'test-manifest.json'</span><span style=\"color: #ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    })</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"多线程打包Happypack\"><a href=\"#多线程打包Happypack\" class=\"headerlink\" title=\"多线程打包Happypack\"></a>多线程打包Happypack</h3><p>Happypack一个三方插件，用来开启多线程进行打包</p>\n<p><strong>使用方式</strong></p>\n<p>修改<code>module.rules</code>中需要多线程打包的文件，把<code>loader</code>修改为<code>happypack</code>的<code>loader</code>并通过<code>?id=</code>的方式设置<code>id</code>,创建一个<code>Happypack</code>插件的实例，并配置<code>id</code>和<code>loader</code>（把原来的loader配置复制过来就可以了）</p>\n<p>首先安装插件</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #E06C75\">yarn</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">add</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">happypack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">-</span><span style=\"color: #E5C07B\">D</span></span></code></pre></div><p>在配置中修改配置</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// webpack.config.js</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Happypack</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"happypack\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">rules</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /</span><span style=\"color: #56B6C2\">\\.</span><span style=\"color: #E06C75\">js</span><span style=\"color: #C678DD\">$</span><span style=\"color: #E06C75\">/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: [</span><span style=\"color: #98C379\">'Happypack/loader?id=js'</span><span style=\"color: #ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Happypack</span><span style=\"color: #ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">id</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">'js'</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">use</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #98C379\">'babel-loader'</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    })</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ],</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span></code></pre></div><p><strong>happypack参数</strong></p>\n<ul>\n<li>id: String 用唯一的标识符 id 来代表当前的 Happypack 是用来处理一类特定的文件.</li>\n<li>loaders: Array 用法和 webpack Loader 配置中一样.</li>\n<li>threads: Number 代表开启几个子进程去处理这一类型的文件，默认是3个，类型必须是整数。</li>\n<li>verbose: Boolean 是否允许 HappyPack 输出日志，默认是 true。</li>\n<li>threadPool: HappyThreadPool 代表共享进程池，即多个 HappyPack 实例都使用同一个共享进程池中的子进程去处理任务，以防止资源占用过多。</li>\n<li>verboseWhenProfiling: Boolean 开启webpack –profile ,仍然希望HappyPack产生输出。</li>\n<li>debug: Boolean 启用debug 用于故障排查。默认 false。</li>\n</ul>\n<h3 id=\"webpack自带的优化策略\"><a href=\"#webpack自带的优化策略\" class=\"headerlink\" title=\"webpack自带的优化策略\"></a>webpack自带的优化策略</h3><h4 id=\"tree-shaking\"><a href=\"#tree-shaking\" class=\"headerlink\" title=\"tree-shaking\"></a>tree-shaking</h4><p><code>tree-shaking</code>策略会在生产环境下裁剪掉当前代码中多余的引入，如导出库中导出多个函数但是我们只用到了一个，在打包后webpack会自动的裁减掉多余的函数来减小包的体积。</p>\n<p><code>tree-shaking</code>只会对生产环境且使用<code>import</code>方式导入的代码生效，对<code>require</code>语法不生效。</p>\n<h4 id=\"scope-hosting\"><a href=\"#scope-hosting\" class=\"headerlink\" title=\"scope-hosting\"></a>scope-hosting</h4><p><code>scope-hosting</code>策略会在生产环境下对当前代码进行分析并进行优化合并</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">a</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">b</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">3</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">a</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">b</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">+</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">c</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">d</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// scope-hosting后会优化掉前面a,b,c，d的声明，直接打印计算结果</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #D19A66\">6</span><span style=\"color: #ABB2BF\">)</span></span></code></pre></div><h3 id=\"多页面打包公共代码抽离\"><a href=\"#多页面打包公共代码抽离\" class=\"headerlink\" title=\"多页面打包公共代码抽离\"></a>多页面打包公共代码抽离</h3><p>打包多页面时，我们会想着将多出引用的文件进行抽离，当后续文件进行访问时可以快速的使用缓存来提升效率，那么就可以使用<code>optimization.splitChunks</code>来进行配置。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在<code>webpack4</code>中<code>CommonsChunkPlugin</code>插件被移除，代替方案是使用<code>optimization.splitChunks</code>来进行配置。</p></blockquote>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"path\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">mode</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"production\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">entry</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/index.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">other</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"./src/other.js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">optimization</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">splitChunks</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">cacheGroups</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">common</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #7F848E; font-style: italic\">// 公用部分抽离</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">minSize</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">minChunks</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">chunks</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"initial\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">vendor</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #7F848E; font-style: italic\">// 第三方库抽离</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">test</span><span style=\"color: #ABB2BF\">:</span><span style=\"color: #E06C75\"> /node_modules/</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">priority</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">1</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">minSize</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">minChunks</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">2</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">          </span><span style=\"color: #E06C75\">chunks</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"initial\"</span><span style=\"color: #ABB2BF\">, </span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">output</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">filename</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #98C379\">\"[name].js\"</span><span style=\"color: #ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">path</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #E5C07B\">path</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">resolve</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">__dirname</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #98C379\">\"dist\"</span><span style=\"color: #ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">};</span></span></code></pre></div><p><strong>配置项</strong></p>\n<ul>\n<li>cacheGroups缓存组<ul>\n<li>test 匹配路径的正则表达式</li>\n<li>priority 执行权重，越大越先执行</li>\n</ul>\n</li>\n<li>chunks表示哪些代码需要优化，有三个可选值：initial(初始块)、async(按需加载块)、all(全部块)，默认为async</li>\n<li>minSize表示在压缩前的最小模块大小，默认为30000</li>\n<li>minChunks表示引用多少次才进行优化</li>\n<li>name拆分出来块的名字，默认由块名和hash值自动生成</li>\n</ul>\n<h3 id=\"懒加载\"><a href=\"#懒加载\" class=\"headerlink\" title=\"懒加载\"></a>懒加载</h3><p>webpack的懒加载方式，使用es6草案中的import函数即可。</p>\n<h3 id=\"热加载\"><a href=\"#热加载\" class=\"headerlink\" title=\"热加载\"></a>热加载</h3><p>热加载能让我们在修改代码后由webpack自动的把项目重启并运行，省去了人工的繁琐操作。</p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webapck</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"webpack\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">module</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">exports</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">devServer</span><span style=\"color: #ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">hot</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #D19A66\">true</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #7F848E; font-style: italic\">// 开启热更新</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E06C75\">plugins</span><span style=\"color: #ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webapck</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">HotModuleReplacementPlugin</span><span style=\"color: #ABB2BF\">(), </span><span style=\"color: #7F848E; font-style: italic\">// 开启热更新</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">webapck</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">NamedModulesPlugin</span><span style=\"color: #ABB2BF\">() </span><span style=\"color: #7F848E; font-style: italic\">// 打印更新的文件</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ]</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre></div><p>配置好以后，现在更改文件后保存会发现webpack重新编译了代码，并且页面会强制刷新。</p>\n<h4 id=\"HotModuleReplacementPlugin热更新替换插件\"><a href=\"#HotModuleReplacementPlugin热更新替换插件\" class=\"headerlink\" title=\"HotModuleReplacementPlugin热更新替换插件\"></a>HotModuleReplacementPlugin热更新替换插件</h4><p>不要使用在生产环境</p>\n<p><strong>属性</strong></p>\n<ul>\n<li>multiStep (boolean)：设置为 true 时，插件会分成两步构建文件。首先编译热加载 chunks，之后再编译剩余的通常的资源。</li>\n<li>fullBuildTimeout (number)：当 multiStep 启用时，表示两步构建之间的延时。</li>\n<li>requestTimeout (number)：下载 manifest 的延时（webpack 3.0.0 后的版本支持）。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这些选项属于实验性内容，因此以后可能会被弃用。就如同上文所说的那样，这些选项通常情况下都是没有必要设置的，仅仅是设置一下 new webpack.HotModuleReplacementPlugin() 在大部分情况下就足够了。</p></blockquote>\n<h4 id=\"NamedModulesPlugin\"><a href=\"#NamedModulesPlugin\" class=\"headerlink\" title=\"NamedModulesPlugin\"></a>NamedModulesPlugin</h4><p>当开启 HMR 的时候使用该插件会显示模块的相对路径，建议用于开发环境。</p>\n<h2 id=\"tapable\"><a href=\"#tapable\" class=\"headerlink\" title=\"tapable\"></a>tapable</h2><p>Tapable是一个用于事件发布订阅执行的插件架构</p>\n<h3 id=\"具体内容需要查阅文档\"><a href=\"#具体内容需要查阅文档\" class=\"headerlink\" title=\"具体内容需要查阅文档\"></a>具体内容需要查阅文档</h3><h3 id=\"Sync簇\"><a href=\"#Sync簇\" class=\"headerlink\" title=\"Sync簇\"></a>Sync簇</h3><p>主要方法：</p>\n<ul>\n<li>tap 注册钩子</li>\n<li>call 按顺序同步执行钩子</li>\n<li></li>\n</ul>\n<h4 id=\"SyncHook\"><a href=\"#SyncHook\" class=\"headerlink\" title=\"SyncHook\"></a>SyncHook</h4><p>最基本的同步的钩子事件流</p>\n<p><strong>使用示例</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> { </span><span style=\"color: #E5C07B\">SyncHook</span><span style=\"color: #ABB2BF\"> } </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"tapable\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Lesson</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">hooks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">arch</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yut\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Lesson</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 输出:</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// vue :&gt;&gt;  yut</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// node :&gt;&gt;  yut</span></span></code></pre></div><p><strong>模拟实现</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">SyncHook</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">tasks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">task</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">tasks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">push</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">task</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(...</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">tasks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">forEach</span><span style=\"color: #ABB2BF\">((</span><span style=\"color: #E06C75; font-style: italic\">task</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">task</span><span style=\"color: #ABB2BF\">(...</span><span style=\"color: #E06C75\">args</span><span style=\"color: #ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yuht\"</span><span style=\"color: #ABB2BF\">);</span></span></code></pre></div><h4 id=\"SyncBailHook\"><a href=\"#SyncBailHook\" class=\"headerlink\" title=\"SyncBailHook\"></a>SyncBailHook</h4><p>带有熔断机制的同步钩子事件流，当其中一个钩子执行返回非undefined时，则中断后续钩子的执行</p>\n<p><strong>使用示例</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> { </span><span style=\"color: #E5C07B\">SyncBailHook</span><span style=\"color: #ABB2BF\"> } </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"tapable\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Lesson</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">hooks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">arch</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncBailHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"stop\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yut\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Lesson</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">();</span></span></code></pre></div><p><strong>模拟实现</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">SyncBailHook</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">tasks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">task</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">tasks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">push</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">task</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(...</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">len</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">tasks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">length</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">do</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">tasks</span><span style=\"color: #ABB2BF\">[</span><span style=\"color: #E06C75\">index</span><span style=\"color: #56B6C2\">++</span><span style=\"color: #ABB2BF\">](...</span><span style=\"color: #E06C75\">args</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    } </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">===</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">undefined</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">&amp;&amp;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">&lt;</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">len</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncBailHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"stop\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yuht\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 输出:</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// node :&gt;&gt;  yut</span></span></code></pre></div><h4 id=\"SyncWaterfallHook\"><a href=\"#SyncWaterfallHook\" class=\"headerlink\" title=\"SyncWaterfallHook\"></a>SyncWaterfallHook</h4><p>瀑布流模式的同步钩子事件流，可以传递参数到下一个钩子中，调用call是传入的参数不会传入到后续钩子中</p>\n<p><strong>使用示例</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> { </span><span style=\"color: #E5C07B\">SyncWaterfallHook</span><span style=\"color: #ABB2BF\"> } </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"tapable\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Lesson</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">hooks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">arch</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncWaterfallHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"params\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">data</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">data</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yut\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Lesson</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 输出：</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// node :&gt;&gt;  yuht</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// vue :&gt;&gt;  params</span></span></code></pre></div><p><strong>模拟实现</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">SyncWaterfallHook</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">tasks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">task</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">tasks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">push</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">task</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(...</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> [</span><span style=\"color: #E5C07B\">first</span><span style=\"color: #ABB2BF\">, ...</span><span style=\"color: #E5C07B\">other</span><span style=\"color: #ABB2BF\">] </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">tasks</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">first</span><span style=\"color: #ABB2BF\">(...</span><span style=\"color: #E06C75\">args</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">other</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">reduce</span><span style=\"color: #ABB2BF\">((</span><span style=\"color: #E06C75; font-style: italic\">a</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">b</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">b</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">a</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    }, </span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncWaterfallHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"params\"</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">data</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">data</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yuht\"</span><span style=\"color: #ABB2BF\">);</span></span></code></pre></div><h4 id=\"SyncLoopHook\"><a href=\"#SyncLoopHook\" class=\"headerlink\" title=\"SyncLoopHook\"></a>SyncLoopHook</h4><p>能够实现重复调用某一函数的同步钩子事件流</p>\n<p><strong>使用示例</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> { </span><span style=\"color: #E5C07B\">SyncLoopHook</span><span style=\"color: #ABB2BF\"> } </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">require</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"tapable\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">Lesson</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">hooks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E06C75\">arch</span><span style=\"color: #ABB2BF\">: </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncLoopHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">++</span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">index</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">===</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">3</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">?</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">undefined</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">:</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"loop\"</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">data</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">data</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">hooks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">arch</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yut\"</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">Lesson</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">lesson</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">start</span><span style=\"color: #ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// 输出：</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// node :&gt;&gt;  yuht</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// node :&gt;&gt;  yuht</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// node :&gt;&gt;  yuht</span></span>\n<span class=\"line\"><span style=\"color: #7F848E; font-style: italic\">// vue :&gt;&gt;  yuht</span></span></code></pre></div><p><strong>模拟实现</strong></p>\n<div class=\"language-js\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">js</span><pre class=\"shiki one-dark-pro\" style=\"background-color: #282c34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C678DD\">class</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">SyncLoopHook</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">constructor</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E06C75\">tasks</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75; font-style: italic\">task</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">tasks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">push</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #E06C75\">task</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(...</span><span style=\"color: #E06C75; font-style: italic\">args</span><span style=\"color: #ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    </span><span style=\"color: #E5C07B\">this</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #E5C07B\">tasks</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">forEach</span><span style=\"color: #ABB2BF\">((</span><span style=\"color: #E06C75; font-style: italic\">task</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      </span><span style=\"color: #C678DD\">do</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">        </span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">task</span><span style=\"color: #ABB2BF\">(...</span><span style=\"color: #E06C75\">args</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">      } </span><span style=\"color: #C678DD\">while</span><span style=\"color: #ABB2BF\"> (</span><span style=\"color: #E06C75\">ret</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">!=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">undefined</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C678DD\">const</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">new</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #61AFEF\">SyncLoopHook</span><span style=\"color: #ABB2BF\">([</span><span style=\"color: #98C379\">\"name\"</span><span style=\"color: #ABB2BF\">]);</span></span>\n<span class=\"line\"><span style=\"color: #C678DD\">let</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #E06C75\">loopNums</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">=</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">0</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">name</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"node :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">name</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #C678DD\">return</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">++</span><span style=\"color: #E06C75\">loopNums</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #56B6C2\">===</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">3</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">?</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #D19A66\">undefined</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #C678DD\">:</span><span style=\"color: #ABB2BF\"> </span><span style=\"color: #98C379\">\"loop\"</span><span style=\"color: #ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">tap</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue\"</span><span style=\"color: #ABB2BF\">, (</span><span style=\"color: #E06C75; font-style: italic\">data</span><span style=\"color: #ABB2BF\">) </span><span style=\"color: #C678DD\">=&gt;</span><span style=\"color: #ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">  </span><span style=\"color: #E5C07B\">console</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">log</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"vue :&gt;&gt; \"</span><span style=\"color: #ABB2BF\">, </span><span style=\"color: #E06C75\">data</span><span style=\"color: #ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color: #ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #E5C07B\">hook</span><span style=\"color: #ABB2BF\">.</span><span style=\"color: #61AFEF\">call</span><span style=\"color: #ABB2BF\">(</span><span style=\"color: #98C379\">\"yuht\"</span><span style=\"color: #ABB2BF\">);</span></span></code></pre></div><h3 id=\"Async簇\"><a href=\"#Async簇\" class=\"headerlink\" title=\"Async簇\"></a>Async簇</h3><h4 id=\"AsyncParralleHook\"><a href=\"#AsyncParralleHook\" class=\"headerlink\" title=\"AsyncParralleHook\"></a>AsyncParralleHook</h4><p>并行异步钩子，有<code>回调函数模式</code>和<code>promise模式</code>两种调用模式。</p>\n<p><strong>回调函数模式</strong><br>在注册钩子时使用tapAsync，此时会多传入一个回到函数，当钩子执行完毕时需要调用该回调。<br>在启动时调用callAsync，此时需要传入一个回调函数，此回调函数在所有钩子执行完毕后被调用。</p>\n<p><strong>promise模式</strong><br>在注册钩子是使用tapPromise，返回一个promise对象。<br>在启动时调用promise，返回一个promise对象，当所有钩子执行成功后该promise进入完成状态。</p>\n<h4 id=\"AsyncParallelBailHook\"><a href=\"#AsyncParallelBailHook\" class=\"headerlink\" title=\"AsyncParallelBailHook\"></a>AsyncParallelBailHook</h4><p>带有熔断的异步钩子，当任意一个钩子返回值非undefined的值时就不会调用最终的回调钩子。</p>\n","text":"配套学习demo源码toypack webpack 功能 webpack 支持 0 配置使用，但是功能支持偏弱； webpack 的指责之一是将代码打包成 js...","permalink":"/post/webpack/webpack4学习笔记","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"26 mins."},"categories":[{"name":"webpack","slug":"webpack","count":1,"path":"api/categories/webpack.json"}],"tags":[{"name":"webpack","slug":"webpack","count":1,"path":"api/tags/webpack.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E5%A5%97%E5%AD%A6%E4%B9%A0demo%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">配套学习demo源码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#webpack-%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">webpack 功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%8A%A8%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">手动配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8C%85%E5%8E%9F%E7%90%86-%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">打包原理&#x2F;机制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#html-%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8E%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">html 服务器与插件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#html-%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">html 服务器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#html-%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">html 插件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#plugins\"><span class=\"toc-text\">plugins</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#loader\"><span class=\"toc-text\">loader</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#loader%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE%E9%A1%B9\"><span class=\"toc-text\">loader的一些配置项</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#css%E7%9A%84%E5%85%BC%E5%AE%B9%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">css的兼容优化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#css%E7%9A%84%E6%8A%BD%E7%A6%BB%E5%92%8C%E5%8E%8B%E7%BC%A9\"><span class=\"toc-text\">css的抽离和压缩</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#css%E7%9A%84%E6%8A%BD%E7%A6%BB\"><span class=\"toc-text\">css的抽离</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#css%E7%9A%84%E5%8E%8B%E7%BC%A9\"><span class=\"toc-text\">css的压缩</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#babel%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">babel的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#js%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">js的优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#babel-plugin-transform-runtime%E5%92%8C-babel-runtime\"><span class=\"toc-text\">@babel&#x2F;plugin-transform-runtime和@babel&#x2F;runtime</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#babel-polyfill\"><span class=\"toc-text\">@babel&#x2F;polyfill</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BD%B1%E5%93%8D\"><span class=\"toc-text\">影响</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#polyfill%E7%9A%84%E5%8D%87%E7%BA%A7%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">polyfill的升级方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E7%9A%84%E5%A4%84%E7%90%86\"><span class=\"toc-text\">全局变量的处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8expose-loader\"><span class=\"toc-text\">使用expose-loader</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8webpack%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">使用webpack插件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87cdn%E6%96%B9%E5%BC%8F%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">通过cdn方式引入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E6%89%93%E5%8C%85\"><span class=\"toc-text\">图片打包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8js%E6%96%87%E4%BB%B6%E4%B8%AD%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">在js文件中使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8css-background-url\"><span class=\"toc-text\">使用css background(url)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8image%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">使用image标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96%E4%B8%80%E4%B8%8B\"><span class=\"toc-text\">优化一下</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8C%85%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">打包文件的分类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#js%E8%BE%93%E5%87%BA%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">js输出路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#css%E8%BE%93%E5%87%BA%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">css输出路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#img%E8%BE%93%E5%87%BA%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">img输出路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E8%B5%84%E6%BA%90%E8%AE%BF%E9%97%AE%E6%97%B6%E7%9A%84%E5%89%8D%E7%BC%80%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">关于资源访问时的前缀路径</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%A1%B5%E9%9D%A2%E6%89%93%E5%8C%85\"><span class=\"toc-text\">多页面打包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87\"><span class=\"toc-text\">准备</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-1\"><span class=\"toc-text\">配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#souce-map\"><span class=\"toc-text\">souce-map</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">其他方式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#watch\"><span class=\"toc-text\">watch</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-2\"><span class=\"toc-text\">配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">其他插件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#clean-webpack-plugin\"><span class=\"toc-text\">clean-webpack-plugin</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">安装和使用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#copy-webpack-plugin\"><span class=\"toc-text\">copy-webpack-plugin</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8-1\"><span class=\"toc-text\">安装和使用</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#webpack%E8%B7%A8%E5%9F%9F\"><span class=\"toc-text\">webpack跨域</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#devServer%E4%BB%A3%E7%90%86\"><span class=\"toc-text\">devServer代理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">使用方式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">前端模拟数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81%E5%86%99%E5%9C%A8%E4%B8%80%E8%B5%B7%EF%BC%88%E6%AD%A4%E6%96%B9%E6%B3%95%E5%8F%AA%E9%80%82%E5%90%88nodejs%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89\"><span class=\"toc-text\">前后端代码写在一起（此方法只适合nodejs服务器）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#express%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">express版本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#koa2%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">koa2版本</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#resolve\"><span class=\"toc-text\">resolve</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#modules\"><span class=\"toc-text\">modules</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#alias\"><span class=\"toc-text\">alias</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mainFields\"><span class=\"toc-text\">mainFields</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">定义环境变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8C%BA%E5%88%86%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">区分环境</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">安装使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96%E7%82%B9\"><span class=\"toc-text\">一些优化点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#noParse%E5%BF%BD%E7%95%A5%E6%97%A0%E4%BE%9D%E8%B5%96%E5%A4%A7%E5%9E%8B%E5%BA%93\"><span class=\"toc-text\">noParse忽略无依赖大型库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#IgnorePlugin%E5%BF%BD%E7%95%A5%E4%BE%9D%E8%B5%96%E5%8C%85%E7%9A%84%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">IgnorePlugin忽略依赖包的指定文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DllPlugin%E5%AE%9E%E7%8E%B0%E8%BE%93%E5%87%BAdll%E5%BA%93\"><span class=\"toc-text\">DllPlugin实现输出dll库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%89%93%E5%8C%85Happypack\"><span class=\"toc-text\">多线程打包Happypack</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#webpack%E8%87%AA%E5%B8%A6%E7%9A%84%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">webpack自带的优化策略</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#tree-shaking\"><span class=\"toc-text\">tree-shaking</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#scope-hosting\"><span class=\"toc-text\">scope-hosting</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%A1%B5%E9%9D%A2%E6%89%93%E5%8C%85%E5%85%AC%E5%85%B1%E4%BB%A3%E7%A0%81%E6%8A%BD%E7%A6%BB\"><span class=\"toc-text\">多页面打包公共代码抽离</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%87%92%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">懒加载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%83%AD%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">热加载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#HotModuleReplacementPlugin%E7%83%AD%E6%9B%B4%E6%96%B0%E6%9B%BF%E6%8D%A2%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">HotModuleReplacementPlugin热更新替换插件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#NamedModulesPlugin\"><span class=\"toc-text\">NamedModulesPlugin</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tapable\"><span class=\"toc-text\">tapable</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B7%E4%BD%93%E5%86%85%E5%AE%B9%E9%9C%80%E8%A6%81%E6%9F%A5%E9%98%85%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">具体内容需要查阅文档</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Sync%E7%B0%87\"><span class=\"toc-text\">Sync簇</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SyncHook\"><span class=\"toc-text\">SyncHook</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SyncBailHook\"><span class=\"toc-text\">SyncBailHook</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SyncWaterfallHook\"><span class=\"toc-text\">SyncWaterfallHook</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SyncLoopHook\"><span class=\"toc-text\">SyncLoopHook</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Async%E7%B0%87\"><span class=\"toc-text\">Async簇</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#AsyncParralleHook\"><span class=\"toc-text\">AsyncParralleHook</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#AsyncParallelBailHook\"><span class=\"toc-text\">AsyncParallelBailHook</span></a></li></ol></li></ol></li></ol>","author":{"name":"天然卷打工战士","slug":"blog-author","avatar":"https://pic-blog-1255296193.cos.ap-beijing.myqcloud.com/touxiang.jpg","link":"/","description":"未看此花时， <br> 此花与汝同归于寂； <br> 来看此花时， <br> 此花颜色一时明白过来。","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"MonoGame官方文档(一)","uid":"5f6f6649742c70ec6ba94bdb691b49e4","slug":"MonoGame官方文档(一)","date":"2020-06-09T16:00:00.000Z","updated":"2023-12-18T13:12:34.659Z","comments":true,"path":"api/articles/MonoGame官方文档(一).json","keywords":null,"cover":"https://images.pexels.com/photos/3046581/pexels-photo-3046581.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260","text":"了解代码引用包csusing Microsoft.Xna.Framework; using Microsoft.Xna.Framework.Graphics; ...","permalink":"/post/MonoGame官方文档(一)","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"游戏开发","slug":"游戏开发","count":10,"path":"api/tags/游戏开发.json"},{"name":"MonoGame","slug":"MonoGame","count":4,"path":"api/tags/MonoGame.json"}],"author":{"name":"天然卷打工战士","slug":"blog-author","avatar":"https://pic-blog-1255296193.cos.ap-beijing.myqcloud.com/touxiang.jpg","link":"/","description":"未看此花时， <br> 此花与汝同归于寂； <br> 来看此花时， <br> 此花颜色一时明白过来。","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"文档导航","uid":"762d57d23f302a5afc8450b6572a5c7f","slug":"文档导航","date":"2020-03-16T09:03:15.000Z","updated":"2023-12-18T13:28:57.880Z","comments":true,"path":"api/articles/文档导航.json","keywords":null,"cover":null,"text":"前端开发 JavaScript/node.js 现代 JavaScript 教程 nodejs中文网 koa2官方文档 eggjs官方文档 w3school 阮...","permalink":"/post/文档导航","photos":[],"count_time":{"symbolsCount":350,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"天然卷打工战士","slug":"blog-author","avatar":"https://pic-blog-1255296193.cos.ap-beijing.myqcloud.com/touxiang.jpg","link":"/","description":"未看此花时， <br> 此花与汝同归于寂； <br> 来看此花时， <br> 此花颜色一时明白过来。","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}