{"title":"纯Canvas事件按钮点击按下效果","uid":"0fbbceddbe858589d1dc31c9d206fd02","slug":"纯Canvas事件按钮点击按下效果","date":"2019-12-25T16:23:35.000Z","updated":"2021-12-05T14:34:08.000Z","comments":true,"path":"api/articles/纯Canvas事件按钮点击按下效果.json","keywords":null,"cover":[],"content":"<p>使用纯Canvas实现一个按钮点击按下的效果，类似下图</p>\n<p><img src=\"../images/%E7%BA%AFCanvas%E4%BA%8B%E4%BB%B6%E6%8C%89%E9%92%AE%E7%82%B9%E5%87%BB%E6%8C%89%E4%B8%8B%E6%95%88%E6%9E%9C/image-20200408144716773.png\" alt=\"image-20200408144716773\"></p>\n<p>使用到的API<br>阴影偏移：</p>\n<ul>\n<li>shadowOffsetX = float</li>\n<li>shadowOffsetY = float</li>\n<li>用来实现有体积的视觉效果 效果等同于 <code>css</code>中的<code>shadow</code>属性</li>\n</ul>\n<p>阴影模糊：</p>\n<ul>\n<li>shadowBlur = float</li>\n<li>设置阴影的模糊效果</li>\n</ul>\n<p>阴影颜色：</p>\n<ul>\n<li>shadowColor = color</li>\n<li>设置阴影的颜色</li>\n</ul>\n<p>路径：</p>\n<ul>\n<li><a href=\"http://www.w3school.com.cn/tags/canvas_beginpath.asp\" title=\"HTML5 canvas beginPath() 方法\"><code>beginPath()</code></a> </li>\n<li><a href=\"http://www.w3school.com.cn/tags/canvas_moveto.asp\" title=\"HTML5 canvas moveTo() 方法\"><code>moveTo()</code></a></li>\n<li><a href=\"http://www.w3school.com.cn/tags/canvas_lineto.asp\" title=\"HTML5 canvas lineTo() 方法\"><code>lineTo()</code></a></li>\n<li><a href=\"http://www.w3school.com.cn/tags/canvas_quadraticcurveto.asp\" title=\"HTML5 canvas quadraticCurveTo() 方法\"><code>quadraticCurveTo()</code></a></li>\n<li><a href=\"http://www.w3school.com.cn/tags/canvas_closepath.asp\" title=\"HTML5 canvas closePath() 方法\"><code>closePath()</code></a></li>\n<li>以此为 <code>起始一条路径，或重置当前路径</code>、<code>把路径移动到画布中的指定点，不创建线条</code>、<code>    添加一个新点，然后在画布中创建从该点到最后指定点的线条</code>、<code>创建二次贝塞尔曲线</code>、<code>    创建从当前点回到起始点的路径</code></li>\n</ul>\n<p>具体实现：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n    &lt;canvas id&#x3D;&quot;myCanvas&quot; width&#x3D;&quot;1000&quot; height&#x3D;&quot;800&quot; style&#x3D;&quot;border:1px solid #d3d3d3;&quot;&gt;&lt;&#x2F;canvas&gt;\n\n    &lt;script&gt;\n        var c &#x3D; document.getElementById(&quot;myCanvas&quot;);\n        var ctx &#x3D; c.getContext(&quot;2d&quot;);\n\n        var x &#x3D; 20\n        var y &#x3D; 20\n        var height &#x3D; 100\n        var width &#x3D; 200\n        var radius &#x3D; 5\n\n        &#x2F;&#x2F; 绘制初始状态\n        radiusRect(x, y, width, height, radius, ctx)\n        setShadow(ctx)\n        draw(ctx)\n        cleartShadow(ctx)\n\n        &#x2F;&#x2F; 绘制圆角矩形\n        function radiusRect(x, y, width, height, radius, ctx) &#123;\n            &#x2F;&#x2F; 开启路径\n            ctx.beginPath()\n            &#x2F;&#x2F; 设置填充颜色\n            ctx.fillStyle &#x3D; &quot;#0066CC&quot;\n            &#x2F;&#x2F; 绘制边\n            ctx.moveTo(x, y + radius)\n            ctx.lineTo(x, y + height - radius)\n            &#x2F;&#x2F; 绘制圆角\n            ctx.quadraticCurveTo(x, y + height, x + radius, y + height)\n            ctx.lineTo(x + width - radius, y + height)\n            ctx.quadraticCurveTo(x + width, y + height, x + width, y + height - radius)\n            ctx.lineTo(x + width, y + radius)\n            ctx.quadraticCurveTo(x + width, y, x + width - radius, y)\n            ctx.lineTo(x + radius, y)\n            ctx.quadraticCurveTo(x, y, x, y + radius)\n            &#x2F;&#x2F; 闭合路径\n            ctx.closePath();\n        &#125;\n\n        &#x2F;&#x2F; 设置阴影和偏移\n        function setShadow(ctx) &#123;\n            ctx.shadowOffsetX &#x3D; 0\n            ctx.shadowOffsetY &#x3D; 10 &#x2F;&#x2F; 10个偏移量\n            ctx.shadowBlur &#x3D; 0\n            ctx.shadowColor &#x3D; &quot;#006600&quot;\n        &#125;\n\n        &#x2F;&#x2F; 清楚掉阴影和位移\n        function cleartShadow(ctx) &#123;\n            ctx.shadowOffsetX &#x3D; 0\n            ctx.shadowOffsetY &#x3D; 0\n        &#125;\n\n        &#x2F;&#x2F; 绘制到画布上\n        function draw(ctx) &#123;\n            ctx.stroke()\n            ctx.fill()\n        &#125;\n\n        &#x2F;&#x2F;事件监听 按下时，持续的绘制为按下状态\n        c.addEventListener(&#39;mousedown&#39;, (e) &#x3D;&gt; &#123;\n            if (e.clientX &gt;&#x3D; x &amp;&amp; e.clientX &lt;&#x3D; x + width &amp;&amp; e.clientY &gt;&#x3D; y &amp;&amp; e.clientY &lt;&#x3D; y + height &amp;&amp; e\n                .button &#x3D;&#x3D; 0) &#123;\n                ctx.clearRect(0, 0, 1000, 1000) &#x2F;&#x2F; 先清楚所有的矩形\n                radiusRect(x, y + 10, width, height, radius, ctx) &#x2F;&#x2F; 10个偏移量\n                draw(ctx)\n\n\n            &#125;\n        &#125;)\n\n        &#x2F;&#x2F;事件监听 抬起时，恢复为初始状态\n        c.addEventListener(&#39;mouseup&#39;, (e) &#x3D;&gt; &#123;\n            if (e.button &#x3D;&#x3D; 0) &#123;\n                setTimeout(() &#x3D;&gt; &#123;\n                    radiusRect(x, y, width, height, radius, ctx)\n                    setShadow(ctx)\n                    draw(ctx)\n                    cleartShadow(ctx)\n                &#125;, 100)\n            &#125;\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n","text":"使用纯Canvas实现一个按钮点击按下的效果，类似下图 使用到的API阴影偏移： shadowOffsetX = float shadowOffsetY = float 用来实现有体积的视觉效果 效果等同于 css中的shadow属性 阴影模糊： shadowBlur = flo...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"canvas","slug":"canvas","count":2,"path":"api/categories/canvas.json"}],"tags":[],"toc":"","author":{"name":"打工战士","slug":"blog-author","avatar":"https://cdn.u1.huluxia.com/g4/M03/19/CD/rBAAdmGuLfyAds0SAACW7BZxpZU096.jpg","link":"/","description":"未看此花时，此花与汝同归于寂 <br> 来看此花时，此花颜色一时明白过来","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用VSCode编辑器debug调试Vue代码","uid":"90a976545b5488dd75ff7364ad12073f","slug":"使用VSCode编辑器debug调试Vue代码","date":"2019-12-25T16:24:33.000Z","updated":"2021-12-05T14:34:08.000Z","comments":true,"path":"api/articles/使用VSCode编辑器debug调试Vue代码.json","keywords":null,"cover":[],"text":" 环境为 vue-cli3、webpack、vscode 首先需要在VSCode中安装 Debugger for Chrome 插件 然后在debug配置中添加如下配置 配置代码 &#123; &quot;type&quot;: &quot;chrome&quot;, &quot...","link":"","photos":[],"count_time":{"symbolsCount":883,"symbolsTime":"1 mins."},"categories":[{"name":"vue","slug":"vue","count":2,"path":"api/categories/vue.json"}],"tags":[],"author":{"name":"打工战士","slug":"blog-author","avatar":"https://cdn.u1.huluxia.com/g4/M03/19/CD/rBAAdmGuLfyAds0SAACW7BZxpZU096.jpg","link":"/","description":"未看此花时，此花与汝同归于寂 <br> 来看此花时，此花颜色一时明白过来","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"如何跳过SourceTree的注册步骤，直接使用功能（3.2.6亲测有效）","uid":"429bc49bea45cd590028e18172e3c7b5","slug":"如何跳过SourceTree的注册步骤，直接使用功能（3.2.6亲测有效）","date":"2019-11-05T02:03:00.000Z","updated":"2021-12-05T14:34:08.000Z","comments":true,"path":"api/articles/如何跳过SourceTree的注册步骤，直接使用功能（3.2.6亲测有效）.json","keywords":null,"cover":null,"text":"首先在官网上下载 SourceTree 的安装包，我下载的时候最新版本是 3.2.6官方下载链接 安装好软件后，打开软件会提示必须使用 Bitbuket 的账号才可以登录，我们只需要跳过这一步就可以正常使用其功能，具体步骤为： 第一步：在文件系统地址栏输入： %LocalAppD...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"git","slug":"git","count":3,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"}],"author":{"name":"打工战士","slug":"blog-author","avatar":"https://cdn.u1.huluxia.com/g4/M03/19/CD/rBAAdmGuLfyAds0SAACW7BZxpZU096.jpg","link":"/","description":"未看此花时，此花与汝同归于寂 <br> 来看此花时，此花颜色一时明白过来","socials":{"github":"https://github.com/tianranjuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}